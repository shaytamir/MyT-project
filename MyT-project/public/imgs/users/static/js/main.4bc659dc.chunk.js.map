{"version":3,"sources":["store/search/searchActions.js","components/common/navbar.jsx","components/common/input.jsx","components/common/form.jsx","components/pages/createAccount.jsx","components/pages/login.jsx","components/refs/logout.jsx","store/likes/likeActions.js","store/posts/editPost/editPostActions.js","store/posts/postsComments/commentsActions.js","services/timeService.js","components/pages/posts/postEdit.jsx","services/utils.js","components/pages/posts/deleteComment.jsx","components/pages/posts/postComments.jsx","services/imgService.js","store/userImg/userImgActions.js","components/pages/my-imgs/img.jsx","components/pages/posts/postItem.jsx","components/common/header.jsx","components/pages/posts/posts.jsx","services/searchService.js","services/todosService.js","store/initialData/initActions.js","store/firstLogin/flActions.js","store/todoLists/lists/listsActions.js","store/todoLists/todo/todoActions.js","components/pages/todos/todoForm.jsx","components/pages/todos/editTodo.jsx","components/pages/todos/todoItem.jsx","services/colorService.js","components/pages/todos/removedItem.jsx","components/pages/todos/editListTitle.jsx","components/pages/todos/lists.jsx","components/pages/todos/newListForm.jsx","components/pages/todos/historyBtn.jsx","components/pages/todos/HistoryLists.jsx","components/pages/todos/myTodos.jsx","store/posts/postsActions.js","store/editUser/editUserActions.js","store/user/userActions.js","components/account/editAccount.jsx","components/pages/my-imgs/addImg.jsx","components/pages/my-imgs/bigImg.jsx","components/pages/my-imgs/myImgs.jsx","components/common/footer.jsx","App.js","reportWebVitals.js","store/middleware/monitorReducer.js","store/store.js","index.js","store/posts/postReducer.js","store/initialData/initReducers.js","store/reducers.js","store/todoLists/todo/todoTypes.js","services/httpService.js","services/userService.js","store/userImg/userImgTypes.js","store/posts/postsComments/commentsTypes.js","store/posts/editPost/editPostTypes.js","services/postService.js","store/likes/likeTypes.js","store/posts/postsTypes.js","store/initialData/initTypes.js","store/firstLogin/flTypes.js","store/editUser/editUserTypes.js","store/user/userTypes.js","store/search/searchTypes.js","store/posts/addPost/addPostActions.js","store/todoLists/lists/listsTypes.js"],"names":["search","value","dispatch","type","searchActions","SEARCH_REQUEST","SEARCH_SUCCESS","payload","searchdSuccess","Navbar","state","e","console","log","target","this","props","data","user","imgs","userImg","img","haveImg","find","user_id","_id","isProfileImg","imgUrl","imageData","includes","className","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","first_name","Fragment","role","aria-haspopup","aria-labelledby","placeholder","onChange","handdleChange","src","alt","onClick","go2myImags","Component","connect","more","Input","name","label","error","rest","htmlFor","Form","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","obj","handleSubmit","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","CreateAccout","last_name","email","cell","password","password_confirm","todosObj","todos","title","isChecked","isDeleted","isDelited","delitedTodos","listColor","peackColor","user_img","a","biz","gender","createAccount","toast","history","replace","response","status","getCurrentUser","action","method","autoComplete","onSubmit","renderInput","renderButton","Login","string","required","min","max","userService","login","res","token","window","location","Logout","logout","likePost","postId","userId","likePostActions","LIKE_POST_REQUEST","likedPost","then","LIKE_POST_SUCCESS","likePostSuccess","catch","err","LIKE_POST_FAILURE","unLikePost","UNLIKE_POST_REQUEST","unLikedPost","UNLIKE_POST_SUCCESS","unLikePostSuccess","UNLIKE_POST_FAILURE","editPost","editPostActions","EDIT_POST_REQUEST","EditedPost","EDIT_POST_SUCCESS","editPostSuccess","EDIT_POST_FAILURE","editPostOn","EDIT_ON","editOnSuccess","editPostOff","EDIT_OFF","editOffSuccess","deletePost","DELETE_POST_REQUEST","DELETEpost","DELETE_POST_SUCCESS","deletePostSuccess","DELETE_POST_FAILURE","postCommenstOn","commentPostTypes","COMMENTS_POST_ON","postCommentsOnSuccess","postCommenstOff","COMMENTS_POST_OFF","postCommentsOffSuccess","addComment","comment","ADD_COMMENT_REQUEST","addedComment","ADD_COMMENT_SUCCESS","addCommentSuccess","ADD_COMMENT_FAILURE","editComment","newValue","EDIT_COMMENT_REQUEST","editedComment","EDIT_COMMENT_SUCCESS","editCommentSuccess","EDIT_COMMENT_FAILURE","deleteComment","DELETE_COMMENT_REQUEST","deletedComment","DELETE_COMMENT_SUCCESS","deleteCommentSuccess","DELETE_COMMENT_FAILURE","inEditComment","commentId","COMMENTS_IN_EDIT","inCommentEditRequest","outEditComment","COMMENTS_OUT_EDIT","outCommentEditRequest","EditPost","post","isEditOn","editPost2On","DeletePost","posts","swalConfitm","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","getHighlightedText","highlight","parts","split","RegExp","map","part","i","style","toLowerCase","backgroundColor","DeleteComment","ref","el","textInput","focus","commentChange","onBlur","handleCommetEditBlur","PostComments","newComment","comments","length","inEdit","isAuther","findCommenter","handleCommentEdit","postChange","getImgs","http","get","apiUrl","uploadedImg","patch","addedImg","imageFormObj","falsedProfileImg","changedProfileImg","imgId","setUserProfileImg","DeletedImg","delete","uploadUserImg","userImgActions","USER_UPLOAD_IMG_REQUEST","USER_UPLOAD_IMG_SUCCESS","uploadImgSuccess","USER_UPLOAD_IMG_FAILURE","addImg","urlImg","imgCount","ADD_IMG_REQUEST","ADD_IMG_SUCCESS","addImgSuccess","ADD_IMG_FAILURE","imgCounterInc","IMG_COUNTER_INC_REQUEST","newCount","todoLists_count","IMG_COUNTER_INC_SUCCESS","counterIncSuccess","IMG_COUNTER_INCT_FAILURE","changeProfileImg","PROFILE_IMG_REQUEST","PROFILE_IMG_SUCCESS","changeProfileImgSuccess","PROFILE_IMG_FAILURE","inimgEditMOde","IN_IMG_EDIT_MODE","inimgEditMOderequest","outimgEditMOde","OUT_IMG_EDIT_MODE","outimgEditMOderequest","DELeteImg","DELETE_IMG_REQUEST","DELETE_IMG_SUCCESS","DELeteImgSuccess","DELETE_IMG_FAILURE","Img","prevImg","inEditMode","clearEditMode","openBigImg","imgSrc","checkImgSource","handleImgClick","handleImgDELETE","handleFullScreen","setProfileImg","PostItem","likesNum","likes","temp_value","likesCount","users","isMyPost","isLiked","some","like","likesCounter","postText","user_name","postTime","postDate","date2change","Date","date","getDate","month","getMonth","year","getYear","hr","getHours","getMinutes","sec","getSeconds","createdAt","imgAddress","postUser","profile_img","commentCounter","defaultValue","onFocus","endOfInput","handleEditBlur","isCommentsOn","postCommentsOn","postCommentsOff","handleLiked","handleUnLiked","Header","Posts","isMyPosts","isLikes","activeBtn","sortPosts","valueChange","handleAddPost","AddPost","incPostsCount","isPosts","filter","postsSearchFilter","concat","reverse","go2posts","go2myPosts","go2likes","sortChange","cols","rows","todo","listId","newText","createList","list","color","getMyTodos","myActiveTodosCount","myTodos","fetchData","actions","FETCH_DATA_REQUEST","getAllPosts","getAllUsers","getUser","userTodos","FETCH_DATA_SUCCESS","fetchDataSuccess","FETCH_DATA_FAILURE","fetchDataFailure","firstLogin","firstLoginActions","FIRST_LOGIN_REQUEST","isFirstLogin","FIRST_LOGIN_SUCCESS","FirstLoginSuccess","FIRST_LOGIN_FAILURE","addTodoListRequest","todoListsActions","ADD_TODOLIST_REQUEST","addTodoListSuccess","list_name","list_color","ADD_TODOLIST_SUCCESS","addTodoListFailure","ADD_TODOLIST_FAILURE","addTodoList","incListsCount","INC_LIST_COUNT_REQUEST","incTodolistsCount","INC_LIST_COUNT_SUCCESS","INC_LIST_COUNT_FAILURE","removeList","REMOVE_LIST_REQUEST","removeTodoList","REMOVE_LIST_SUCCESS","removeListSuccess","REMOVE_LIST_FAILURE","restoreList","RESTORE_LIST_REQUEST","restoreTodoList","RESTORE_LIST_SUCCESS","restoreListSuccess","RESTORE_LIST_FAILURE","DELETElist","DELETE_LIST_REQUEST","DELETEtodoList","DELETE_LIST_SUCCESS","DELETElistSuccess","DELETE_LIST_FAILURE","listChangeColor","CHANGE_LIST_COLOR_REQUEST","listChangedColor","CHANGE_LIST_COLOR_SUCCESS","changeListColorSuccess","CHANGE_LIST_COLOR_FAILURE","historyBtnToggler","HISTORY_BTN_REQUEST","toggleTodosHistory","HISTORY_BTN_SUCCESS","historyBtnToggleSuccess","HISTORY_BTN_FAILURE","inEditList","IN_EDIT_LIST","inEditListrequest","outEditList","OUT_EDIT_LIST","outEditListRequest","editListName","EDIT_LIST_NAME_REQUEST","editedListName","EDIT_LIST_NAME_SUCCESS","editListNameSuccess","EDIT_LIST_NAME_FAILURE","addTodo","todoActions","ADD_TODO_REQUEST","createTodoo","ADD_TODO_SUCCESS","addTodoSuccess","ADD_TODO_FAILURE","editTodo","EDIT_TODO_REQUEST","editTodoo","EDIT_TODO_SUCCESS","editTodoSuccess","EDIT_TODO_FAILURE","toggleIsChecked","TOGGLE_ISCHECKED_REQUEST","toggledIsChecked","TOGGLE_ISCHECKED_SUCCESS","oggleIsCheckedSuccess","TOGGLE_ISCHECKED_FAILURE","incTodosCount","INC_TODOS_COUNT_REQUEST","incrementTodosCount","INC_TODOS_COUNT_SUCCESS","incTodosSuccess","INC_TODOS_COUNT_FAILURE","removeTodo","REMOVE_TODO_REQUEST","removedTodo","REMOVE_TODO_SUCCESS","removeTodoSuccess","REMOVE_TODO_FAILURE","restoreTodo","RESTORE_TODO_REQUEST","restoredTodo","RESTORE_TODO_SUCCESS","restoreTodoSuccess","RESTORE_TODO_FAILURE","DELETEtodo","DELETE_TODO_REQUEST","DELETEDtodo","DELETE_TODO_SUCCESS","DeleteTodoSuccess","DELETE_TODO_FAILURE","inEditTodo","IN_EDIT_TODO","inEditTodoquest","outEditTodo","OUT_EDIT_TODO","outEditTodoquest","AddTodoForm","count","todosCount","EditTodo","todoValue","handleEditTodo","listid","TodoItem","checked","handleDeleteTodo","colorsObj","purple","red","yellow","green","gray","pink","randColor","rand","Math","floor","random","Object","keys","values","RemovedItem","handleRestoreTodo","handleDELETEtodo","EditListTitle","listName","handleEditListName","TodoList","colorEdit","listCount","colorsArr","inEditTitle","toggleEditColors","handdleColor","someFunc","NewListForm","String","peack_color","todos_history","HistoryButton","handleClick","HistoryLists","handdleRestore","handdleDELETE","MyTodos","sortLists","hadleFirstTodoList","todosSearchFilter","fetchPosts","FETCH_POSTS_REQUEST","resp","FETCH_POSTS_SUCCESS","fetchPostsSuccess","FETCH_POSTS_FAILURE","fetchPostsFailure","editUser","UserActions","EDIT_USER_REQUEST","editUserService","EDIT_USER_SUCCESS","editUserSuccess","EDIT_USER_FAILURE","DeleteUser","userActions","DELETE_USER_REQUEST","DeletedUser","DELETE_USER_SUCCESS","DeleteUserSuccess","DELETE_USER_FAILURE","EditAccount","img_value","React","createRef","AddImg","targetImg","URL","createObjectURL","files","myImgs","imgCounter","FormData","append","now","fileInput","onInput","handleImg","uploadImage","BigImg","counter","index","closeImgs","currentImg","closeBigImg","baxt","MyImgs","bigImg","bool","Footer","getFullYear","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","newState","end","diff","round","thunk","require","default","rootReducer","middlewareEnhancer","applyMiddleware","logger","composeEnhancers","composeWithDevTools","store","subscribe","preloadedState","getState","ReactDOM","render","StrictMode","document","getElementById","loading","postsReducer","ADD_POST","userPosts","dataReducer","dataActions","addPostsActions","ADD_POSTS_REQUEST","ADD_POSTS_SUCCESS","newId","posts_count","userName","ADD_POSTS_FAILURE","editOn","editOff","editpost","addcComment","push","commentsOn","commentsOff","CommentsEdit","inCommentEdit","CommentsEditOut","outCommentEdit","editedUser","uploadImg","imgBool","imageName","falseImg","changeImg","ChangeUserImg","outEditMode","deleteImg","deleted_todos","userInc","listNameInEdit","listNameOutEdit","incTodos","todoInEdit","todoOutEdit","removeListTodo","restoreListTodo","deleteListTodo","deletedTodos","historyToggle","SEARCH_FAILURE","deltedUser","combineReducers","postReducer","axios","defaults","headers","common","getJwt","interceptors","use","put","localStorage","getItem","setItem","jwt","jwtDecode","regex","valid","options","language","any","allowOnly","removeItem","IMG_COUNTER_INC_FAILURE","createPost","addPostSuccess"],"mappings":"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","file":"static/js/main.4bc659dc.chunk.js","sourcesContent":["import searchActions from \"./searchTypes\";\r\n\r\n/* search */\r\nconst searchRequest = () => {\r\n  return { type: searchActions.SEARCH_REQUEST };\r\n};\r\n\r\nconst searchdSuccess = (value) => {\r\n  return {\r\n    type: searchActions.SEARCH_SUCCESS,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport function search(value) {\r\n  return (dispatch) => {\r\n    dispatch(searchRequest());\r\n\r\n    dispatch(searchdSuccess(value));\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { imgUrl } from \"../../config.json\";\r\n\r\nimport { search } from \"../../store/search/searchActions\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n\r\n  handdleChange(e) {\r\n    console.log(e.target.value);\r\n    this.props.search(e.target.value);\r\n  }\r\n\r\n  go2myImags() {\r\n    <Redirect to=\"/my-images\"></Redirect>;\r\n  }\r\n\r\n  render() {\r\n    const { user, imgs } = this.props.data;\r\n    let userImg = null,\r\n      img = null;\r\n\r\n    if (user.haveImg) {\r\n      userImg = imgs.find((img) => {\r\n        return img.user_id === user._id && img.isProfileImg;\r\n      });\r\n      if (userImg) img = `${imgUrl}/${userImg.imageData}`;\r\n      else img = \"public/img/static/pok.png\";\r\n    }\r\n\r\n    if (img && img.includes(\"blob\")) img = userImg.imageData;\r\n\r\n    return (\r\n      <div className=\" main_navbar\">\r\n        <nav className=\"navbar navbar-expand-md navbar-light myNav\" id=\"myNav\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto nav_ul\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/posts\">\r\n                  <div className=\"btn \">Posts</div>\r\n                </NavLink>\r\n              </li>\r\n              {user && user.first_name && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/todos\">\r\n                      <div className=\"btn\">MyTodos</div>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/my-images\">\r\n                      <div className=\"btn\">MyIMages</div>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item dropdown nav_ul_account\">\r\n                    <div\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      id=\"navbarDropdown\"\r\n                      role=\"button\"\r\n                      data-toggle=\"dropdown\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      Account\r\n                    </div>\r\n\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <NavLink className=\"dropdown-item \" to=\"/edit-profile\">\r\n                        Edit Account\r\n                      </NavLink>\r\n\r\n                      <div className=\"dropdown-divider\"></div>\r\n                      <NavLink className=\"dropdown-item\" to=\"/logout\">\r\n                        Logout\r\n                      </NavLink>\r\n                    </div>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n            {!user.first_name && (\r\n              <React.Fragment>\r\n                <ul className=\"navbar-nav mr-right\">\r\n                  <li className=\"nav-link\">\r\n                    <NavLink className=\"nav-link\" to=\"/login\">\r\n                      Login\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-link\">\r\n                    <NavLink className=\"nav-link\" to=\"/create-account\">\r\n                      Create Account\r\n                    </NavLink>\r\n                  </li>\r\n                </ul>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </nav>\r\n        {user && (\r\n          <form className=\"  search\">\r\n            <input\r\n              className=\"form-control mr-sm-2 search_input\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={(e) => {\r\n                this.handdleChange(e);\r\n              }}\r\n            />\r\n          </form>\r\n        )}\r\n        {user.haveImg && (\r\n          <NavLink to=\"/my-images\">\r\n            <img\r\n              className=\"nav_user_img\"\r\n              src={`${img}`}\r\n              alt=\"user-imge\"\r\n              onClick={() => {\r\n                this.go2myImags();\r\n              }}\r\n            />\r\n          </NavLink>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    search: (value) => dispatch(search(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"\" />\r\n      <p>{error && <span className=\"text-danger\">{error}</span>}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit(e);\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\", placeholder = \"\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        placeholder={placeholder}\r\n      />\r\n    );\r\n  }\r\n}\r\n// renderRadio(){\r\n\r\n// }\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"../common/form\";\r\nimport { createAccount } from \"../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { schema } from \"../../services/userService\";\r\nimport { getCurrentUser } from \"../../services/userService\";\r\n\r\nclass CreateAccout extends Form {\r\n  state = {\r\n    data: {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      cell: \"\",\r\n\r\n      password: \"\",\r\n      password_confirm: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  todosObj = [\r\n    {\r\n      id: 1,\r\n      name: \"start list\",\r\n      todos: [\r\n        {\r\n          id: 1,\r\n          title: \"my first todo\",\r\n          isChecked: true,\r\n          isDeleted: false,\r\n        },\r\n      ],\r\n      isDelited: false,\r\n      delitedTodos: [],\r\n      listColor: \"#D7AEFB\",\r\n      peackColor: false,\r\n    },\r\n  ];\r\n\r\n  user_img =\r\n    \"https://cdn.pixabay.com/photo/2017/05/13/23/05/img-src-x-2310895_960_720\";\r\n\r\n  schema = schema; /* user schema */\r\n\r\n  doSubmit = async () => {\r\n    const data = { ...this.state.data };\r\n    data.biz = false;\r\n    data.gender = \"other\";\r\n\r\n    try {\r\n      await createAccount(data);\r\n      toast(`${data.first_name} sign up successfully`);\r\n      this.props.history.replace(\"/login\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: \"Email is taken\" } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let userLog = getCurrentUser();\r\n    if (userLog) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div id=\"createAcc_container\">\r\n        <div id=\"create_account\" className=\"create_account middleDiv\">\r\n          <h1 className=\"create_account_h1\">Create New Account</h1>\r\n          <form\r\n            className=\"create_account_form container\"\r\n            action=\"/login/create_account\"\r\n            method=\"POST\"\r\n            autoComplete=\"off\"\r\n            name=\"account_formm\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            {this.renderInput(\r\n              \"first_name\",\r\n              \"First Name\",\r\n              \"text\",\r\n              \"Enter your First Name\"\r\n            )}\r\n\r\n            {this.renderInput(\r\n              \"last_name\",\r\n              \"Last Name\",\r\n              \"text\",\r\n              \"Enter your Last Name\"\r\n            )}\r\n            {this.renderInput(\"email\", \"Email\", \"email\", \"Enter your email\")}\r\n\r\n            {this.renderInput(\"cell\", \"Cell\", \"phone\", \"Enter your Cell\")}\r\n            {this.renderInput(\r\n              \"password\",\r\n              \"Password\",\r\n              \"password\",\r\n              \"Enter your password\"\r\n            )}\r\n            {this.renderInput(\r\n              \"password_confirm\",\r\n              \"Password Confirm\",\r\n              \"password\",\r\n              \"ReEnter your password\"\r\n            )}\r\n            {this.renderButton(\"Continue\")}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAccout;\r\n","import React from \"react\";\r\nimport Form from \"../common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport userService from \"../../services/userService\";\r\n// import http from \"../../services/httpService\";\r\n// import { apiUrl } from \"../../config.json\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../services/userService\";\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().min(6).max(1024).label(\"password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const data = { ...this.state.data };\r\n    try {\r\n      const res = await userService.login(data.email, data.password);\r\n      if (res.token) {\r\n        window.location = \"/posts\";\r\n        console.log(222);\r\n      }\r\n      this.setState({ errors: { email: res } });\r\n    } catch (err) {\r\n      console.log(\"eror user login\", err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let userLog = getCurrentUser();\r\n    if (userLog) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"login_container\">\r\n        <div id=\"login\" className=\"login middleDiv\">\r\n          <h1>Login to MyT</h1>\r\n          <h2>Enter you email address and your password</h2>\r\n          <div className=\"form_div\">\r\n            <form\r\n              className=\"log_form\"\r\n              onSubmit={this.handleSubmit}\r\n              method=\"POST\"\r\n              autoComplete=\"off\"\r\n            >\r\n              {this.renderInput(\"email\", \"Email\", \"email\", \"Enter your email\")}\r\n              {this.renderInput(\r\n                \"password\",\r\n                \"Password\",\r\n                \"password\",\r\n                \"Enter your password\"\r\n              )}\r\n              {this.renderButton(\"Login\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import { Component } from \"react\";\r\nimport userService from \"../../services/userService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    userService.logout();\r\n    window.location = \"/login\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import likePostActions from \"./likeTypes\";\r\nimport { likedPost, unLikedPost } from \"../../services/postService\";\r\n\r\n/* like post */\r\n\r\nconst likePostRequest = () => {\r\n  return { type: likePostActions.LIKE_POST_REQUEST };\r\n};\r\n\r\nconst likePostSuccess = (postId, userId) => {\r\n  return {\r\n    type: likePostActions.LIKE_POST_SUCCESS,\r\n    payload: { postId, userId },\r\n  };\r\n};\r\n\r\nconst likePostFailure = (error) => {\r\n  return { type: likePostActions.LIKE_POST_FAILURE, payload: error };\r\n};\r\n\r\nexport function likePost(postId, userId) {\r\n  return (dispatch) => {\r\n    dispatch(likePostRequest());\r\n    likedPost(postId).then(() => {\r\n      dispatch(likePostSuccess(postId, userId));\r\n    }).catch = (err) => {\r\n      console.error(\"like rejected\");\r\n      dispatch(likePostFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* un-like post */\r\n\r\nconst unLikePostRequest = () => {\r\n  return { type: likePostActions.UNLIKE_POST_REQUEST };\r\n};\r\n\r\nconst unLikePostSuccess = (postId, userId) => {\r\n  return {\r\n    type: likePostActions.UNLIKE_POST_SUCCESS,\r\n    payload: { postId, userId },\r\n  };\r\n};\r\n\r\nconst unLikePostFailure = (error) => {\r\n  return { type: likePostActions.UNLIKE_POST_FAILURE, payload: error };\r\n};\r\n\r\nexport function unLikePost(postId, userId) {\r\n  return (dispatch) => {\r\n    dispatch(unLikePostRequest());\r\n    unLikedPost(postId).then(() => {\r\n      dispatch(unLikePostSuccess(postId, userId));\r\n    }).catch = (err) => {\r\n      console.error(\"unLike rejected\");\r\n      dispatch(unLikePostFailure(err));\r\n    };\r\n  };\r\n}\r\n","import editPostActions from \"./editPostTypes\";\r\nimport { EditedPost, DELETEpost } from \"../../../services/postService\";\r\n\r\n/* edit post */\r\nconst editPostRequest = () => {\r\n  return { type: editPostActions.EDIT_POST_REQUEST };\r\n};\r\n\r\nconst editPostSuccess = (postId, value) => {\r\n  console.log(value);\r\n  return {\r\n    type: editPostActions.EDIT_POST_SUCCESS,\r\n    payload: { postId, value },\r\n  };\r\n};\r\n\r\nconst editPostFailure = (error) => {\r\n  return { type: editPostActions.EDIT_POST_FAILURE, payload: error };\r\n};\r\n\r\nexport function editPost(postId, value) {\r\n  return (dispatch) => {\r\n    dispatch(editPostRequest());\r\n    console.log(111);\r\n    EditedPost(postId, value).then(() => {\r\n      console.log(222);\r\n      dispatch(editPostSuccess(postId, value));\r\n      console.log(333);\r\n    }).catch = (err) => {\r\n      console.error(\"unLike rejected\");\r\n      dispatch(editPostFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* edit post on */\r\n\r\nconst editOnSuccess = (postId) => {\r\n  return {\r\n    type: editPostActions.EDIT_ON,\r\n    payload: { postId },\r\n  };\r\n};\r\n\r\nexport function editPostOn(postId) {\r\n  return (dispatch) => {\r\n    dispatch(editOnSuccess(postId));\r\n  };\r\n}\r\n/* edit post off */\r\n\r\nconst editOffSuccess = (postId) => {\r\n  return {\r\n    type: editPostActions.EDIT_OFF,\r\n    payload: { postId },\r\n  };\r\n};\r\n\r\nexport function editPostOff(postId) {\r\n  return (dispatch) => {\r\n    console.log(postId);\r\n    dispatch(editOffSuccess(postId));\r\n  };\r\n}\r\n\r\n/* delete post */\r\nconst deletePostRequest = () => {\r\n  return { type: editPostActions.DELETE_POST_REQUEST };\r\n};\r\n\r\nconst deletePostSuccess = (postId) => {\r\n  return {\r\n    type: editPostActions.DELETE_POST_SUCCESS,\r\n    payload: { postId },\r\n  };\r\n};\r\n\r\nconst deletePostFailure = (error) => {\r\n  return { type: editPostActions.DELETE_POST_FAILURE, payload: error };\r\n};\r\n\r\nexport function deletePost(postId) {\r\n  return (dispatch) => {\r\n    dispatch(deletePostRequest());\r\n    console.log(111);\r\n    DELETEpost(postId).then(() => {\r\n      console.log(222);\r\n      dispatch(deletePostSuccess(postId));\r\n      console.log(333);\r\n    }).catch = (err) => {\r\n      console.error(\"unLike rejected\");\r\n      dispatch(deletePostFailure(err));\r\n    };\r\n  };\r\n}\r\n","import commentPostTypes from \"./commentsTypes\";\r\nimport {\r\n  addedComment,\r\n  editedComment,\r\n  deletedComment,\r\n} from \"../../../services/postService\";\r\n\r\n/* post comments on */\r\nconst postCommentsOnSuccess = (postId) => {\r\n  return {\r\n    type: commentPostTypes.COMMENTS_POST_ON,\r\n    payload: { postId },\r\n  };\r\n};\r\n\r\nexport function postCommenstOn(postId) {\r\n  console.log(321);\r\n  return (dispatch) => {\r\n    dispatch(postCommentsOnSuccess(postId));\r\n  };\r\n}\r\n\r\n/*  post comments  off */\r\nconst postCommentsOffSuccess = (postId) => {\r\n  console.log(123);\r\n  return {\r\n    type: commentPostTypes.COMMENTS_POST_OFF,\r\n    payload: { postId },\r\n  };\r\n};\r\n\r\nexport function postCommenstOff(postId) {\r\n  return (dispatch) => {\r\n    console.log(postId);\r\n    dispatch(postCommentsOffSuccess(postId));\r\n  };\r\n}\r\n\r\n/* add comment */\r\nconst addCommentRequest = () => {\r\n  return { type: commentPostTypes.ADD_COMMENT_REQUEST };\r\n};\r\n\r\nconst addCommentSuccess = (postId, comment) => {\r\n  return {\r\n    type: commentPostTypes.ADD_COMMENT_SUCCESS,\r\n    payload: { postId, comment },\r\n  };\r\n};\r\n\r\nconst addCommentFailure = (error) => {\r\n  return { type: commentPostTypes.ADD_COMMENT_FAILURE, payload: error };\r\n};\r\n\r\nexport function addComment(postId, comment) {\r\n  return (dispatch) => {\r\n    dispatch(addCommentRequest());\r\n    console.log(111);\r\n    addedComment(postId, comment).then(() => {\r\n      console.log(222);\r\n      dispatch(addCommentSuccess(postId, comment));\r\n      console.log(333);\r\n    }).catch = (err) => {\r\n      console.error(\"unLike rejected\");\r\n      dispatch(addCommentFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* edit  comment */\r\nconst editCommentRequest = () => {\r\n  return { type: commentPostTypes.EDIT_COMMENT_REQUEST };\r\n};\r\nconst editCommentSuccess = (postId, comment, newValue) => {\r\n  return {\r\n    type: commentPostTypes.EDIT_COMMENT_SUCCESS,\r\n    payload: { postId, comment, newValue },\r\n  };\r\n};\r\nconst editCommentFailure = (error) => {\r\n  return { type: commentPostTypes.EDIT_COMMENT_FAILURE, payload: error };\r\n};\r\nexport function editComment(postId, comment, newValue) {\r\n  return (dispatch) => {\r\n    dispatch(editCommentRequest());\r\n    console.log(111);\r\n    editedComment(postId, comment, newValue).then(() => {\r\n      console.log(222);\r\n      dispatch(editCommentSuccess(postId, comment, newValue));\r\n      console.log(333);\r\n    }).catch = (err) => {\r\n      console.error(\"unLike rejected\");\r\n      dispatch(editCommentFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* delete  comment */\r\nconst deleteCommentRequest = () => {\r\n  return { type: commentPostTypes.DELETE_COMMENT_REQUEST };\r\n};\r\n\r\nconst deleteCommentSuccess = (postId, comment) => {\r\n  return {\r\n    type: commentPostTypes.DELETE_COMMENT_SUCCESS,\r\n    payload: { postId, comment },\r\n  };\r\n};\r\n\r\nconst deleteCommentFailure = (error) => {\r\n  return { type: commentPostTypes.DELETE_COMMENT_FAILURE, payload: error };\r\n};\r\n\r\nexport function deleteComment(postId, comment) {\r\n  return (dispatch) => {\r\n    dispatch(deleteCommentRequest());\r\n    console.log(111);\r\n    deletedComment(postId, comment).then(() => {\r\n      console.log(222);\r\n      dispatch(deleteCommentSuccess(postId, comment));\r\n      console.log(333);\r\n    }).catch = (err) => {\r\n      console.error(\"unLike rejected\");\r\n      dispatch(deleteCommentFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* comment in edit mode */\r\nconst inCommentEditRequest = (postId, commentId) => {\r\n  return {\r\n    type: commentPostTypes.COMMENTS_IN_EDIT,\r\n    payload: { postId, commentId },\r\n  };\r\n};\r\n\r\nexport function inEditComment(postId, commentId) {\r\n  return (dispatch) => {\r\n    dispatch(inCommentEditRequest(postId, commentId));\r\n  };\r\n}\r\n\r\n/* comment out edit mode */\r\nconst outCommentEditRequest = (postId, commentId) => {\r\n  console.log(222);\r\n  return {\r\n    type: commentPostTypes.COMMENTS_OUT_EDIT,\r\n    payload: { postId, commentId },\r\n  };\r\n};\r\n\r\nexport function outEditComment(postId, commentId) {\r\n  console.log(111);\r\n  return (dispatch) => {\r\n    dispatch(outCommentEditRequest(postId, commentId));\r\n  };\r\n}\r\n","/* time handler func */\r\nexport const getDate = (postDate) => {\r\n  let date2change = new Date(postDate);\r\n  let date = date2change.getDate();\r\n  let month = date2change.getMonth() + 1;\r\n  let year = date2change.getYear() - 100;\r\n  let hr = date2change.getHours();\r\n  let min = date2change.getMinutes();\r\n  let sec = date2change.getSeconds();\r\n\r\n  if (date < 10) date = \"0\" + date;\r\n  if (month < 10) month = \"0\" + month;\r\n  if (hr < 10) hr = \"0\" + hr;\r\n  if (min < 10) min = \"0\" + min;\r\n  if (sec < 10) sec = \"0\" + sec;\r\n\r\n  const postTime = `${date}/${month}/${year} ${hr}:${min}:${sec}`;\r\n  return postTime;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editPostOn,\r\n  editPostOff,\r\n  deletePost,\r\n} from \"../../../store/posts/editPost/editPostActions\";\r\n\r\nclass EditPost extends Component {\r\n  async editPost2On(post) {\r\n    console.log(post);\r\n    if (post.isEditOn) {\r\n      console.log(999999);\r\n      await this.props.editPostOff(post.id);\r\n    } else {\r\n      await this.props.editPostOn(post.id);\r\n    }\r\n  }\r\n\r\n  DeletePost(post) {\r\n    this.props.deletePost(post.id);\r\n  }\r\n  render() {\r\n    const { post } = this.props;\r\n    return (\r\n      <div className=\"edit_main_div \">\r\n        <img\r\n          className=\"edit_icon\"\r\n          src=\" /imgs/icons/edit.png\"\r\n          alt=\"edit\"\r\n          onClick={() => {\r\n            this.editPost2On(post);\r\n          }}\r\n        />\r\n        {!post.isEditOn && (\r\n          <React.Fragment>\r\n            <img\r\n              className=\"delete_post\"\r\n              src=\"imgs/icons/x.png\"\r\n              alt=\"delete post\"\r\n              onClick={() => {\r\n                this.DeletePost(post);\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    posts: state.posts,\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePost: (postId) => dispatch(deletePost(postId)),\r\n\r\n    editPostOn: (postId) => dispatch(editPostOn(postId)),\r\n    editPostOff: (postId) => dispatch(editPostOff(postId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\r\n","import Swal from \"sweetalert2\";\r\n\r\n/* swall confirm delete message */\r\nexport async function swalConfitm() {\r\n  const deleteAlert = await Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: \"You won't be able to revert this!\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n  if (deleteAlert) return true;\r\n  return false;\r\n}\r\n\r\n/* high light searched text */\r\nexport const getHighlightedText = (text, highlight) => {\r\n  // Split on highlight term and include term into parts, ignore case\r\n  const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n  return (\r\n    <span>\r\n      {\" \"}\r\n      {parts.map((part, i) => (\r\n        <span\r\n          key={i}\r\n          // className=\"highlight\"\r\n          style={\r\n            part.toLowerCase() === highlight.toLowerCase()\r\n              ? { backgroundColor: \"orange\" }\r\n              : {}\r\n          }\r\n        >\r\n          {part}\r\n        </span>\r\n      ))}{\" \"}\r\n    </span>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editComment,\r\n  outEditComment,\r\n} from \"../../../store/posts/postsComments/commentsActions\";\r\n\r\nclass DeleteComment extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { comment } = this.props;\r\n    this.setState({ value: comment.comment });\r\n  }\r\n\r\n  commentChange(e) {\r\n    const newValue = e.target.value;\r\n    this.setState({ value: newValue });\r\n  }\r\n\r\n  async handleCommetEditBlur(post, comment, value) {\r\n    await this.props.editComment(post.id, comment, value);\r\n    await this.props.outEditComment(post.id, comment.id);\r\n  }\r\n\r\n  render() {\r\n    const { post, comment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"edit_input\"\r\n          value={this.state.value}\r\n          ref={(el) => {\r\n            this.textInput = el && el.focus();\r\n          }}\r\n          onChange={(e) => {\r\n            this.commentChange(e);\r\n          }}\r\n          onBlur={() => {\r\n            this.handleCommetEditBlur(post, comment, this.state.value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editComment: (postId, comment, newValue) =>\r\n      dispatch(editComment(postId, comment, newValue)),\r\n\r\n    outEditComment: (postId, commentId) =>\r\n      dispatch(outEditComment(postId, commentId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteComment);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteComment from \"./deleteComment\";\r\nimport {\r\n  addComment,\r\n  deleteComment,\r\n  inEditComment,\r\n} from \"../../../store/posts/postsComments/commentsActions\";\r\nimport { getHighlightedText } from \"../../../services/utils\";\r\n\r\nclass PostComments extends Component {\r\n  state = {\r\n    value: \"\",\r\n    newComment: \"\",\r\n  };\r\n\r\n  postChange(e) {\r\n    const value = e.target.value;\r\n    this.setState({ value });\r\n  }\r\n\r\n  /* add comment to post */\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { post } = this.props;\r\n    const { user } = this.props.data;\r\n    const comment = {\r\n      name: `${user.first_name} ${user.last_name}`,\r\n      comment: this.state.value,\r\n      id: `${post.id}-${post.comments.length + 1}`,\r\n      user_id: user._id,\r\n      inEdit: false,\r\n    };\r\n    if (this.state.value.length > 0) {\r\n      this.props.addComment(post.id, comment);\r\n      this.setState({ value: \"\" });\r\n    }\r\n  }\r\n\r\n  findCommenter(comment, user) {\r\n    if (comment.user_id === user._id) return true;\r\n    return false;\r\n  }\r\n  handleCommentEdit(post, comment) {\r\n    this.props.inEditComment(post.id, comment.id);\r\n  }\r\n  async DeleteComment(post, comment) {\r\n    await this.props.deleteComment(post.id, comment);\r\n  }\r\n\r\n  render() {\r\n    const { user, search } = this.props.data;\r\n    const { post } = this.props;\r\n\r\n    let isAuther = false;\r\n    if (post.user_id === user._id) isAuther = true;\r\n\r\n    return (\r\n      <div className=\"comments_div_main\">\r\n        <div className=\"container comments_div\">\r\n          <div className=\"comments\">\r\n            {/* {!post.comments.length > 0 && (\r\n              <div className=\"comment_placeholder\">be the first to comment</div>\r\n            )} */}\r\n            {post.comments &&\r\n              post.comments.map((comment, i) => (\r\n                <React.Fragment key={i}>\r\n                  <div className=\"comment\">\r\n                    <div className=\"text\">\r\n                      {this.findCommenter(comment, user) && (\r\n                        <div className=\"edit_comment_btn\">\r\n                          <img\r\n                            src=\"/imgs/icons/edit.png\"\r\n                            alt=\"edit-comment\"\r\n                            onClick={() => {\r\n                              this.handleCommentEdit(post, comment);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      {!comment.inEdit && (\r\n                        <React.Fragment>\r\n                          {getHighlightedText(comment.comment, search)}\r\n                        </React.Fragment>\r\n                      )}\r\n                      {comment.inEdit && (\r\n                        <React.Fragment>\r\n                          <DeleteComment comment={comment} post={post} />\r\n                        </React.Fragment>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"auther\">\r\n                      by {getHighlightedText(comment.name, search)}\r\n                    </div>\r\n\r\n                    {/* delete comment: */}\r\n                    {this.findCommenter(comment, user) && (\r\n                      <button\r\n                        className=\"btn delete_btn\"\r\n                        onClick={() => {\r\n                          this.DeleteComment(post, comment);\r\n                        }}\r\n                      >\r\n                        x\r\n                      </button>\r\n                    )}\r\n                    {isAuther && (\r\n                      <button\r\n                        className=\"btn delete_btn\"\r\n                        onClick={() => {\r\n                          this.DeleteComment(post, comment);\r\n                        }}\r\n                      >\r\n                        x\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n          </div>\r\n          {/* write comment */}\r\n          <form className=\"write_comment_div container\">\r\n            <input\r\n              value={this.state.value}\r\n              type=\"text\"\r\n              placeholder=\"write your comment...\"\r\n              onChange={(e) => {\r\n                this.postChange(e);\r\n              }}\r\n            />\r\n            {/* send comment */}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              onClick={(e) => {\r\n                this.handleSubmit(e);\r\n              }}\r\n            >\r\n              send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addComment: (postId, comment) => dispatch(addComment(postId, comment)),\r\n    inEditComment: (postId, commentId) =>\r\n      dispatch(inEditComment(postId, commentId)),\r\n    deleteComment: (postId, comment) =>\r\n      dispatch(deleteComment(postId, comment)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostComments);\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getImgs() {\r\n  return http.get(`${apiUrl}/image/get-images`);\r\n}\r\n\r\n/* toggle true once* when upload img */\r\nexport async function uploadedImg() {\r\n  return await http.patch(`${apiUrl}/users/me/upload-img`);\r\n}\r\n/* add img */\r\nexport async function addedImg(imageFormObj) {\r\n  return http.post(`${apiUrl}/image/uploadmulter`, imageFormObj);\r\n}\r\n/* make prev img -false profile img */\r\nexport function falsedProfileImg() {\r\n  return http.patch(`${apiUrl}/image/false-current-profile-img`);\r\n}\r\n/* set new profile img ,in imgs colaction */\r\nexport function changedProfileImg(imgId) {\r\n  return http.patch(`${apiUrl}/image/change-profile-img/${imgId}`);\r\n}\r\n/* set user profile img -to user collaction */\r\nexport function setUserProfileImg(imgId) {\r\n  return http.patch(`${apiUrl}/image/set-user-profile-img/${imgId}`);\r\n}\r\n/* counter for users imgs(all + deleted) */\r\nexport function imgCounterIncrece() {\r\n  return http.patch(`${apiUrl}/image/img-counter-inc`);\r\n}\r\n/* DELETE img */\r\nexport function DeletedImg(imgId) {\r\n  return http.delete(`${apiUrl}/image/delete/${imgId}`);\r\n}\r\n\r\nconst exports = {\r\n  getImgs,\r\n  uploadedImg,\r\n  addedImg,\r\n  falsedProfileImg,\r\n  changedProfileImg,\r\n  setUserProfileImg,\r\n  DeletedImg,\r\n};\r\nexport default exports;\r\n","import userImgActions from \"./userImgTypes\";\r\nimport {\r\n  setUserProfileImg,\r\n  changedProfileImg,\r\n  falsedProfileImg,\r\n  addedImg,\r\n  uploadedImg,\r\n  DeletedImg,\r\n  imgCounterIncrece,\r\n} from \"../../services/imgService\";\r\n\r\n/* toggle true once* when upload img */\r\nconst uploadImgRequest = () => {\r\n  return { type: userImgActions.USER_UPLOAD_IMG_REQUEST };\r\n};\r\n\r\nconst uploadImgSuccess = (user) => {\r\n  return {\r\n    type: userImgActions.USER_UPLOAD_IMG_SUCCESS,\r\n    payload: { user },\r\n  };\r\n};\r\n\r\nconst uploadImgFailure = (error) => {\r\n  return { type: userImgActions.USER_UPLOAD_IMG_FAILURE, payload: error };\r\n};\r\n\r\nexport function uploadUserImg(user) {\r\n  return (dispatch) => {\r\n    dispatch(uploadImgRequest());\r\n    uploadedImg().then(() => {\r\n      dispatch(uploadImgSuccess(user));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(uploadImgFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* add img */\r\nconst addImgRequest = () => {\r\n  return { type: userImgActions.ADD_IMG_REQUEST };\r\n};\r\n\r\nconst addImgSuccess = (urlImg, userId, imgCount) => {\r\n  return {\r\n    type: userImgActions.ADD_IMG_SUCCESS,\r\n    payload: { urlImg, userId, imgCount },\r\n  };\r\n};\r\n\r\nconst addImgFailure = (error) => {\r\n  return { type: userImgActions.ADD_IMG_FAILURE, payload: error };\r\n};\r\n\r\nexport function addImg(img, urlImg, userId, imgCount) {\r\n  return (dispatch) => {\r\n    dispatch(addImgRequest());\r\n    addedImg(img).then(() => {\r\n      dispatch(addImgSuccess(urlImg, userId, imgCount));\r\n    }).catch = (err) => {\r\n      console.error(\"new img rejected\");\r\n      dispatch(addImgFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** img cunter increce  ****/\r\nconst counterIncRequest = () => {\r\n  return { type: userImgActions.IMG_COUNTER_INC_REQUEST };\r\n};\r\n\r\nconst counterIncSuccess = (user) => {\r\n  console.log(23333333);\r\n  const newCount = user.todoLists_count + 1;\r\n  return {\r\n    type: userImgActions.IMG_COUNTER_INC_SUCCESS,\r\n    payload: { user, newCount },\r\n  };\r\n};\r\n\r\nconst counterIncFailure = (error) => {\r\n  return { type: userImgActions.IMG_COUNTER_INCT_FAILURE, payload: error };\r\n};\r\n\r\nexport function imgCounterInc(user) {\r\n  return (dispatch) => {\r\n    dispatch(counterIncRequest());\r\n    imgCounterIncrece().then(() => {\r\n      dispatch(counterIncSuccess(user));\r\n    }).catch = (err) => {\r\n      console.error(\"increce todo-lists count failed\");\r\n      dispatch(counterIncFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* change profile img */\r\nconst changeProfileImgRequest = () => {\r\n  return { type: userImgActions.PROFILE_IMG_REQUEST };\r\n};\r\n\r\nconst changeProfileImgSuccess = (imgId, userId) => {\r\n  return {\r\n    type: userImgActions.PROFILE_IMG_SUCCESS,\r\n    payload: { imgId, userId },\r\n  };\r\n};\r\n\r\nconst changeProfileImgFailure = (error) => {\r\n  return { type: userImgActions.PROFILE_IMG_FAILURE, payload: error };\r\n};\r\n\r\nexport function changeProfileImg(imgId, userId) {\r\n  return (dispatch) => {\r\n    dispatch(changeProfileImgRequest());\r\n    falsedProfileImg().then(() => {\r\n      changedProfileImg(imgId).then(() => {\r\n        setUserProfileImg(imgId).then(() => {\r\n          dispatch(changeProfileImgSuccess(imgId, userId));\r\n        }).catch = (err) => {\r\n          console.error(\"new img rejected\");\r\n          dispatch(changeProfileImgFailure(err));\r\n        };\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\n/* img in edit mode */\r\nconst inimgEditMOderequest = (imgId) => {\r\n  return { type: userImgActions.IN_IMG_EDIT_MODE, payload: { imgId } };\r\n};\r\n\r\nexport function inimgEditMOde(imgId) {\r\n  return (dispatch) => {\r\n    dispatch(inimgEditMOderequest(imgId));\r\n  };\r\n}\r\n\r\n/* img out edit mode */\r\nconst outimgEditMOderequest = (imgId) => {\r\n  return { type: userImgActions.OUT_IMG_EDIT_MODE, payload: { imgId } };\r\n};\r\n\r\nexport function outimgEditMOde(imgId) {\r\n  return (dispatch) => {\r\n    dispatch(outimgEditMOderequest(imgId));\r\n  };\r\n}\r\n\r\n/* DELETE img */\r\nconst DELeteImgRequest = () => {\r\n  return { type: userImgActions.DELETE_IMG_REQUEST };\r\n};\r\n\r\nconst DELeteImgSuccess = (imgId) => {\r\n  return {\r\n    type: userImgActions.DELETE_IMG_SUCCESS,\r\n    payload: { imgId },\r\n  };\r\n};\r\n\r\nconst DELeteImgFailure = (error) => {\r\n  return { type: userImgActions.DELETE_IMG_FAILURE, payload: error };\r\n};\r\n\r\nexport function DELeteImg(imgId) {\r\n  return (dispatch) => {\r\n    dispatch(DELeteImgRequest());\r\n    DeletedImg(imgId).then(() => {\r\n      dispatch(DELeteImgSuccess(imgId));\r\n    }).catch = (err) => {\r\n      console.error(\"new img rejected\");\r\n      dispatch(DELeteImgFailure(err));\r\n    };\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { imgUrl } from \"../../../config.json\";\r\nimport {\r\n  inimgEditMOde,\r\n  outimgEditMOde,\r\n  changeProfileImg,\r\n  DELeteImg,\r\n} from \"../../../store/userImg/userImgActions\";\r\nimport { swalConfitm } from \"../../../services/utils\";\r\n\r\nclass Img extends Component {\r\n  state = {};\r\n\r\n  checkImgSource(img, user) {\r\n    if (img.imageData.includes(\"blob\")) {\r\n      return img.imageData;\r\n    }\r\n    return `${imgUrl}/${img.imageData}`;\r\n  }\r\n\r\n  async clearEditMode(imgs) {\r\n    /* finds and clears img in-edit-mode */\r\n    let prevImg = imgs.find((i) => {\r\n      return i.inEditMode === true;\r\n    });\r\n    if (prevImg) await this.props.outimgEditMOde(prevImg.id);\r\n  }\r\n\r\n  async handleImgClick(imgs, img) {\r\n    await this.clearEditMode(imgs);\r\n    await this.props.inimgEditMOde(img.id);\r\n  }\r\n\r\n  async handleFullScreen(i, imgs) {\r\n    await this.clearEditMode(imgs);\r\n    await this.props.openBigImg(true, i);\r\n  }\r\n  async setProfileImg(imgs, img) {\r\n    await this.clearEditMode(imgs);\r\n    await this.props.changeProfileImg(img.id, img.user_id);\r\n  }\r\n\r\n  /* DELETE img */\r\n  async handleImgDELETE(img) {\r\n    console.log(img);\r\n    const prompt = await swalConfitm();\r\n    if (prompt) {\r\n      this.props.DELeteImg(img.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { img, i } = this.props;\r\n    const { user, imgs } = this.props.data;\r\n    const imgSrc = this.checkImgSource(img, user);\r\n\r\n    return (\r\n      <div className=\"img_div\">\r\n        <div className={`img_item ${img.isProfileImg ? \"profile_item\" : null}`}>\r\n          <img\r\n            className=\"thisImg\"\r\n            src={imgSrc}\r\n            alt=\"\"\r\n            onClick={() => {\r\n              this.handleImgClick(imgs, img);\r\n            }}\r\n          />\r\n          {/* on Edit img mode */}\r\n          {img.inEditMode && (\r\n            <React.Fragment>\r\n              <div\r\n                className=\"delete_img_btn\"\r\n                onClick={() => {\r\n                  this.handleImgDELETE(img);\r\n                }}\r\n              >\r\n                {!img.isProfileImg && <img src=\"/imgs/icons/x.png\" alt=\"\" />}\r\n              </div>\r\n              <div className=\"edit_mode\">\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-primary full_screen_btn\"\r\n                    onClick={() => {\r\n                      this.handleFullScreen(i, imgs);\r\n                    }}\r\n                  >\r\n                    full-screen\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  {/* if not profile img */}\r\n                  {!img.isProfileImg && (\r\n                    <button\r\n                      className=\"btn btn-success profile_img_btn\"\r\n                      onClick={() => {\r\n                        this.setProfileImg(imgs, img);\r\n                      }}\r\n                    >\r\n                      set profile image\r\n                    </button>\r\n                  )}\r\n                  {/* if  profile img */}\r\n                  {img.isProfileImg && (\r\n                    <button\r\n                      className=\"btn btn-success profile_img\"\r\n                      onClick={() => {\r\n                        this.setProfileImg(imgs, img);\r\n                      }}\r\n                    >\r\n                      profile image\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    inimgEditMOde: (imgId) => dispatch(inimgEditMOde(imgId)),\r\n    outimgEditMOde: (imgId) => dispatch(outimgEditMOde(imgId)),\r\n    changeProfileImg: (imgId, userId) =>\r\n      dispatch(changeProfileImg(imgId, userId)),\r\n    DELeteImg: (imgId) => dispatch(DELeteImg(imgId)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Img);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { likePost, unLikePost } from \"../../../store/likes/likeActions\";\r\nimport {\r\n  editPostOff,\r\n  editPost,\r\n} from \"../../../store/posts/editPost/editPostActions\";\r\nimport {\r\n  postCommenstOn,\r\n  postCommenstOff,\r\n} from \"../../../store/posts/postsComments/commentsActions\";\r\nimport { getDate } from \"../../../services/timeService\";\r\nimport PostEdit from \"./postEdit\";\r\nimport { getHighlightedText } from \"../../../services/utils\";\r\nimport PostComments from \"./postComments\";\r\nimport img from \"../my-imgs/img\";\r\nimport { imgUrl } from \"../../../config.json\";\r\n\r\nclass PostItem extends Component {\r\n  state = {\r\n    isEditOn: false,\r\n  };\r\n\r\n  async handleLiked(postId, userId) {\r\n    await this.props.likePost(postId, userId);\r\n  }\r\n  async handleUnLiked(postId, userId) {\r\n    await this.props.unLikePost(postId, userId);\r\n  }\r\n\r\n  likesCounter(post) {\r\n    const likesNum = post.likes.length;\r\n    if (likesNum) return likesNum;\r\n    return 0;\r\n  }\r\n\r\n  isMyPost(post, user) {\r\n    if (post.user_id === user._id) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async handleEditBlur(e, post) {\r\n    const value = e.target.value;\r\n    await this.props.editPost(post.id, value);\r\n    await this.props.editPostOff(post.id);\r\n  }\r\n\r\n  /* when edit set focus to end of textInput */\r\n  endOfInput(e) {\r\n    let temp_value = e.target.value;\r\n    e.target.value = \"\";\r\n    e.target.value = temp_value;\r\n  }\r\n\r\n  async postCommentsOn(post) {\r\n    await this.props.postCommenstOn(post.id);\r\n  }\r\n  async postCommentsOff(post) {\r\n    await this.props.postCommenstOff(post.id);\r\n  }\r\n\r\n  render() {\r\n    const { post, user } = this.props;\r\n    const { imgs, users } = this.props.data;\r\n\r\n    let isMyPost = this.isMyPost(post, user);\r\n    /* build likes logic rendering */\r\n    let isLiked = null;\r\n    let likesCount;\r\n    if (post.likes && post.likes.length) {\r\n      isLiked = post.likes.some((like) => {\r\n        return like === user._id;\r\n      });\r\n      likesCount = this.likesCounter(post);\r\n      if (!likesCount) {\r\n        likesCount = 0;\r\n      }\r\n    }\r\n    /* ** */\r\n\r\n    /* search middlewere: */\r\n    const { search } = this.props.data;\r\n    let postText = getHighlightedText(post.post, search);\r\n    let user_name = getHighlightedText(post.user_name, search);\r\n    let postTime = getHighlightedText(getDate(post.createdAt), search);\r\n    /* ** */\r\n\r\n    /* img incertment if img */\r\n    let imgAddress = null;\r\n    const postUser = users.find((user) => {\r\n      return user._id === post.user_id;\r\n    });\r\n    if (postUser && postUser.profile_img.length) {\r\n      const img = imgs.find((img) => {\r\n        return img.id === postUser.profile_img;\r\n      });\r\n      if (img.imageData.includes(\"blob\")) imgAddress = img.imageData;\r\n      else imgAddress = `${imgUrl}/${img.imageData}`;\r\n    }\r\n    /* ** */\r\n    /* comments count */\r\n    let commentCounter = post.comments.length;\r\n\r\n    return (\r\n      <div className=\"posts_div\">\r\n        <div className=\"item container\">\r\n          <div className=\"post_user\">\r\n            <div className=\"user_name\">\r\n              {user_name}\r\n              {postUser && postUser.profile_img.length > 0 && (\r\n                <img src={imgAddress} alt=\"profile-img\" />\r\n              )}\r\n            </div>\r\n            <div className=\"user_time\">\r\n              {post.createdAt ? postTime : \"just now\"}\r\n            </div>\r\n          </div>\r\n          {post.isEditOn && (\r\n            <React.Fragment>\r\n              <textarea\r\n                ref={(el) => {\r\n                  this.textInput = el && el.focus();\r\n                }}\r\n                defaultValue={post.post}\r\n                onFocus={this.endOfInput}\r\n                className=\"post inEdit\"\r\n                onBlur={(e) => {\r\n                  this.handleEditBlur(e, post);\r\n                }}\r\n              ></textarea>\r\n              {/* delete img */}\r\n            </React.Fragment>\r\n          )}\r\n          {!post.isEditOn && <div className=\"post \">{postText}</div>}\r\n          {isMyPost && (\r\n            <React.Fragment>\r\n              <PostEdit post={post} />\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"btn_div container\">\r\n          {user.first_name && !post.isCommentsOn && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn comment_btn\"\r\n              onClick={() => {\r\n                this.postCommentsOn(post);\r\n              }}\r\n            >\r\n              comments ({commentCounter})\r\n            </button>\r\n          )}\r\n          {user.first_name && post.isCommentsOn && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn comment_btn\"\r\n              onClick={() => {\r\n                this.postCommentsOff(post);\r\n              }}\r\n            >\r\n              comments ({commentCounter})\r\n            </button>\r\n          )}\r\n\r\n          <PostComments post={post} />\r\n\r\n          {user.first_name && !isLiked && (\r\n            <React.Fragment>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary like_btn\"\r\n                onClick={() => {\r\n                  this.handleLiked(post.id, user._id);\r\n                }}\r\n              >\r\n                like\r\n                <span className=\"likesCount\">\r\n                  {likesCount ? \"  (\" + likesCount + \")\" : \" (\" + 0 + \")\"}\r\n                </span>\r\n              </button>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {/* UnLike button */}\r\n          {isLiked && (\r\n            <React.Fragment>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success unLike_btn\"\r\n                onClick={() => {\r\n                  this.handleUnLiked(post.id);\r\n                }}\r\n              >\r\n                liked\r\n                <span className=\"likesCount\">{\" (\" + likesCount + \")\"}</span>\r\n              </button>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    posts: state.posts,\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    likePost: (postId, userId) => dispatch(likePost(postId, userId)),\r\n    unLikePost: (postId, userId) => dispatch(unLikePost(postId, userId)),\r\n    editPost: (postId, value) => dispatch(editPost(postId, value)),\r\n    editPostOff: (postId) => dispatch(editPostOff(postId)),\r\n    postCommenstOn: (postId) => dispatch(postCommenstOn(postId)),\r\n    postCommenstOff: (postId) => dispatch(postCommenstOff(postId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem);\r\n","import React from \"react\";\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 mt-4\">\r\n        <h1>{title}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { AddPost } from \"../../../store/posts/addPost/addPostActions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport PostItem from \"./postItem\";\r\nimport { incPostsCount } from \"../../../services/userService\";\r\nimport { postsSearchFilter } from \"../../../services/searchService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../common/header\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    text: \"\",\r\n    isMyPosts: false,\r\n    isLikes: false,\r\n    activeBtn: \"Posts\",\r\n    sortPosts: \"asc\",\r\n  };\r\n\r\n  valueChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddPost = async (e) => {\r\n    const { user } = this.props.data;\r\n    if (this.state.text.length >= 2) {\r\n      try {\r\n        await this.props.AddPost(this.state.text, user);\r\n        await incPostsCount();\r\n      } catch (ex) {\r\n        console.log(\"post failed..\");\r\n        toast(`New Post failed `);\r\n      }\r\n    }\r\n    this.setState({ text: \"\" });\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  go2posts() {\r\n    this.setState({ isPosts: true, isMyPosts: false, isLikes: false });\r\n  }\r\n  go2myPosts() {\r\n    this.setState({ isMyPosts: true, isPosts: false, isLikes: false });\r\n  }\r\n  go2likes() {\r\n    this.setState({ isLikes: true, isMyPosts: false, isPosts: false });\r\n  }\r\n\r\n  sortChange(e) {\r\n    this.setState({ sortPosts: e.target.value });\r\n  }\r\n  render() {\r\n    const { user, search } = this.props.data;\r\n    let { text, activeBtn, sortPosts } = this.state;\r\n\r\n    let posts,\r\n      title = \"Community Posts\";\r\n\r\n    /* is user ? */\r\n    if (!user.first_name) {\r\n      posts = this.props.posts.posts;\r\n      /* user: */\r\n    } else if (user.first_name) {\r\n      posts = this.props.data.posts;\r\n      /* user: my posts */\r\n      if (this.state.isMyPosts) {\r\n        posts = this.props.data.posts.filter((post) => {\r\n          return post.user_id === user._id;\r\n        });\r\n        title = \"My Posts\";\r\n        activeBtn = \"My-Posts\";\r\n      }\r\n      /* user:  favorite posts */\r\n      if (this.state.isLikes) {\r\n        posts = this.props.data.posts.filter((post) => {\r\n          return post.likes.includes(user._id);\r\n        });\r\n        title = \"Liked posts\";\r\n        activeBtn = \"Likes\";\r\n      }\r\n    }\r\n    /* when search */\r\n    if (search.length > 0) {\r\n      posts = postsSearchFilter(posts, search);\r\n      title = \"Search in Posts\";\r\n    }\r\n    /* if sort descending */\r\n    if (sortPosts === \"desc\") {\r\n      posts = [].concat(posts).reverse();\r\n    }\r\n\r\n    return (\r\n      <div className=\"container main_post_div \">\r\n        <Header title={title} />\r\n        <hr />\r\n\r\n        {/* not user create account bunner */}\r\n        {!user.first_name && (\r\n          <React.Fragment>\r\n            <div className=\"create_account_bunner\">\r\n              <div className=\" button_div\">\r\n                <Link to=\"/create-account\" className=\"btn\">\r\n                  Create Account\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        {/* posts nav */}\r\n        <div className=\"postType_btn \">\r\n          <div>\r\n            {user.first_name && (\r\n              <React.Fragment>\r\n                <button\r\n                  className={`btn ${activeBtn === \"Posts\" ? \"active\" : \"\"}`}\r\n                  onClick={() => {\r\n                    this.go2posts();\r\n                  }}\r\n                >\r\n                  Posts\r\n                </button>\r\n                <button\r\n                  className={`btn ${activeBtn === \"My-Posts\" ? \"active\" : \"\"}`}\r\n                  onClick={() => {\r\n                    this.go2myPosts();\r\n                  }}\r\n                >\r\n                  My-Posts\r\n                </button>\r\n                <button\r\n                  className={`btn ${activeBtn === \"Likes\" ? \"active\" : \"\"}`}\r\n                  onClick={() => {\r\n                    this.go2likes();\r\n                  }}\r\n                >\r\n                  Likes\r\n                </button>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n          {posts && posts.length > 0 && (\r\n            <div className=\"sort_posts\">\r\n              <select\r\n                name=\"\"\r\n                id=\"\"\r\n                onChange={(e) => {\r\n                  this.sortChange(e);\r\n                }}\r\n              >\r\n                <option value=\"asc\">new to old</option>\r\n                <option value=\"desc\">old to new</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* post textarea */}\r\n        {user.first_name && (\r\n          <React.Fragment>\r\n            <h4 className=\"newPosts_header\">Post a new post</h4>\r\n            <div className=\"flex\">\r\n              <textarea\r\n                name=\"postField\"\r\n                id=\"postField\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                value={text}\r\n                onChange={(e) => this.valueChange(e)}\r\n              ></textarea>\r\n              <button\r\n                className=\"post_btn btn btn-success\"\r\n                type=\"button\"\r\n                onClick={(e) => this.handleAddPost(e)}\r\n              >\r\n                Post\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        <div>\r\n          {posts &&\r\n            posts.length > 0 &&\r\n            posts.map((post, i) => (\r\n              <React.Fragment key={i}>\r\n                <PostItem post={post} user={user} />\r\n              </React.Fragment>\r\n            ))}\r\n\r\n          {/* no posts messages */}\r\n          {posts && posts.length === 0 && (\r\n            <React.Fragment>\r\n              {activeBtn === \"Posts\" && (\r\n                <p className=\"text-center no_posts\">\r\n                  no posts yet, be the first to post yout mind\r\n                </p>\r\n              )}\r\n              {activeBtn === \"Likes\" && (\r\n                <p className=\"text-center no_posts\">\r\n                  you didnt like any post yet...\r\n                </p>\r\n              )}\r\n              {activeBtn === \"My-Posts\" && (\r\n                <p className=\"text-center no_posts\">\r\n                  You have no posts yet, feel free to post your mind..\r\n                </p>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    posts: state.posts,\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AddPost: (post, user) => dispatch(AddPost(post, user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n","/*****  for search in todos ***** */\r\nexport function todosSearchFilter(todos, search) {\r\n  return todos.filter((item) => {\r\n    return (\r\n      item.list_name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.todos.find((todo) =>\r\n        todo.title.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\n/*****  for search in posts ***** */\r\nexport function postsSearchFilter(posts, search) {\r\n  return posts.filter((post) => {\r\n    return (\r\n      post.user_name.toLowerCase().includes(search.toLowerCase()) ||\r\n      post.post.toLowerCase().includes(search.toLowerCase())\r\n\r\n      /* ****for search in comments ********* */\r\n\r\n      // || post.comments.some((comment) => {\r\n      //   return comment.comment.toLowerCase().includes(search.toLowerCase());\r\n      // }) || post.comments.some((comment) => {\r\n      //   return comment.name.toLowerCase().includes(search.toLowerCase());\r\n      // })\r\n\r\n      /* ****** not works for non-subscribe-user ****/\r\n    );\r\n  });\r\n}\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/* create a singel todo */\r\nexport async function createTodoo(todo, listId) {\r\n  return http.patch(`${apiUrl}/todolist/todos/add-todo/${listId}`, todo);\r\n}\r\n/* edit a singel todo */\r\nexport async function editTodoo(todo, listId, newText) {\r\n  return http.patch(`${apiUrl}/todolist/todos/edit-todo/${listId}`, {\r\n    todo,\r\n    newText,\r\n  });\r\n}\r\n/* toggle todo check-box */\r\nexport async function toggledIsChecked(listId, todo) {\r\n  return http.patch(`${apiUrl}/todolist/todos/is-checked/${listId}`, {\r\n    todo,\r\n  });\r\n}\r\n/* create todoList */\r\nexport async function createList(list) {\r\n  return http.post(`${apiUrl}/todolist/lists`, list);\r\n}\r\n/* change list color */\r\nexport async function listChangedColor(list, color) {\r\n  return http.patch(`${apiUrl}/todolist/lists/change-color/${list.id}`, {\r\n    color,\r\n  });\r\n}\r\n/* get my lists */\r\nexport function getMyTodos() {\r\n  return http.get(`${apiUrl}/todolist/lists`);\r\n}\r\n/* handles not deleted todos count */\r\nexport async function myActiveTodosCount() {\r\n  const myTodos = await getMyTodos();\r\n  console.log(myTodos);\r\n\r\n  const myActiveTodosCount = myTodos.data.filter((todo) => {\r\n    return !todo.isDeleted;\r\n  });\r\n  console.log(myActiveTodosCount.length);\r\n  return myActiveTodosCount.length;\r\n}\r\n/* handles users list count */\r\nexport async function incrementTodosCount(listId) {\r\n  return await http.patch(`${apiUrl}/todolist/lists/todos-count/${listId}`);\r\n}\r\nexport async function toggleTodosHistory() {\r\n  // return await http.patch(`${apiUrl}/users/me/todos-history`);\r\n  return true;\r\n}\r\n\r\n/* edit list name */\r\nexport function editedListName(listId, value) {\r\n  return http.patch(`${apiUrl}/todolist/lists/edit-list-name/${listId}`, {\r\n    value,\r\n  });\r\n}\r\n/* remove(not delete) todolist */\r\nexport function removeTodoList(list) {\r\n  return http.patch(`${apiUrl}/todolist/lists/remove/${list.id}`);\r\n}\r\n/* Restore removed todolist */\r\nexport function restoreTodoList(list) {\r\n  return http.patch(`${apiUrl}/todolist/lists/restore/${list.id}`);\r\n}\r\n/* DELETE todolist */\r\nexport function DELETEtodoList(list) {\r\n  return http.delete(`${apiUrl}/todolist/lists/delete/${list.id}`);\r\n}\r\n/* remove(not delete) todo */\r\nexport function removedTodo(todo, listId) {\r\n  return http.patch(`${apiUrl}/todoList/todos/remove/${listId}`, todo);\r\n}\r\n/* Restore removed todo */\r\nexport function restoredTodo(todo, listId) {\r\n  return http.patch(`${apiUrl}/todoList/todos/restore/${listId}`, todo);\r\n}\r\n/* DELETE todo */\r\nexport function DELETEDtodo(todo, listId) {\r\n  return http.patch(`${apiUrl}/todoList/todos/delete/${listId}`, todo);\r\n}\r\n\r\nconst todosService = {\r\n  createList,\r\n};\r\n\r\nexport default todosService;\r\n","import actions from \"./initTypes\";\r\n\r\nimport { getAllUsers, getUser } from \"../../services/userService\";\r\n\r\nimport { getAllPosts } from \"../../services/postService\";\r\nimport { getMyTodos } from \"../../services/todosService\";\r\nimport { getImgs } from \"../../services/imgService\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return { type: actions.FETCH_DATA_REQUEST };\r\n};\r\n\r\nconst fetchDataSuccess = (posts, users, user, userTodos, imgs) => {\r\n  return {\r\n    type: actions.FETCH_DATA_SUCCESS,\r\n    payload: { users, posts, user, userTodos, imgs },\r\n  };\r\n};\r\n\r\nconst fetchDataFailure = (error) => {\r\n  return { type: actions.FETCH_DATA_FAILURE, payload: error };\r\n};\r\nexport const fetchData = (dispatch) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    getAllPosts()\r\n      .then((response) => {\r\n        const posts = response.data.map((post) => post);\r\n        getAllUsers().then((response) => {\r\n          const users = response.data.map((user) => user);\r\n          getUser().then((response) => {\r\n            const user = response.data;\r\n            getMyTodos().then((response) => {\r\n              const userTodos = response.data;\r\n              getImgs().then((response) => {\r\n                const imgs = response.data;\r\n                dispatch(fetchDataSuccess(posts, users, user, userTodos, imgs));\r\n              });\r\n            });\r\n          }).catch = (err) => {\r\n            console.error(\"user not fetched\", err);\r\n          };\r\n        }).catch = (err) => {\r\n          console.error(\"UserS not feteched\", err);\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchDataFailure(error));\r\n      });\r\n  };\r\n};\r\n","import firstLoginActions from \"./flTypes\";\r\nimport { isFirstLogin } from \"../../services/userService\";\r\n\r\nconst FirstLoginRequest = () => {\r\n  return { type: firstLoginActions.FIRST_LOGIN_REQUEST };\r\n};\r\n\r\nconst FirstLoginSuccess = (user) => {\r\n  return { type: firstLoginActions.FIRST_LOGIN_SUCCESS, payload: { user } };\r\n};\r\n\r\nconst FirstLoginFailure = (error) => {\r\n  return { type: firstLoginActions.FIRST_LOGIN_FAILURE, payload: error };\r\n};\r\n\r\nexport function firstLogin(user) {\r\n  return (dispatch) => {\r\n    dispatch(FirstLoginRequest());\r\n    isFirstLogin().then(() => {\r\n      dispatch(FirstLoginSuccess(user));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(FirstLoginFailure(err));\r\n    };\r\n  };\r\n}\r\n","import todoListsActions from \"./listsTypes\";\r\nimport {\r\n  createList,\r\n  removeTodoList,\r\n  toggleTodosHistory,\r\n  restoreTodoList,\r\n  DELETEtodoList,\r\n  listChangedColor,\r\n  editedListName,\r\n} from \"../../../services/todosService\";\r\nimport { incTodolistsCount } from \"../../../services/userService\";\r\n\r\nconst addTodoListRequest = () => {\r\n  return { type: todoListsActions.ADD_TODOLIST_REQUEST };\r\n};\r\n\r\nconst addTodoListSuccess = (list) => {\r\n  const { list_name, user_id, list_color, id } = list;\r\n  return {\r\n    type: todoListsActions.ADD_TODOLIST_SUCCESS,\r\n    payload: { list_name, user_id, list_color, id },\r\n  };\r\n};\r\n\r\nconst addTodoListFailure = (error) => {\r\n  return { type: todoListsActions.ADD_TODOLIST_FAILURE, payload: error };\r\n};\r\n\r\nexport function addTodoList(list, listCount = 1) {\r\n  return (dispatch) => {\r\n    dispatch(addTodoListRequest());\r\n    createList(list).then(() => {\r\n      dispatch(addTodoListSuccess(list));\r\n    }).catch = (err) => {\r\n      console.error(\"add todolist rejected\");\r\n      dispatch(addTodoListFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** lists cunter inc  ****/\r\nconst counterIncRequest = () => {\r\n  return { type: todoListsActions.INC_LIST_COUNT_REQUEST };\r\n};\r\n\r\nconst counterIncSuccess = (user) => {\r\n  const newCount = user.todoLists_count + 1;\r\n  return {\r\n    type: todoListsActions.INC_LIST_COUNT_SUCCESS,\r\n    payload: { user, newCount },\r\n  };\r\n};\r\n\r\nconst counterIncFailure = (error) => {\r\n  return { type: todoListsActions.INC_LIST_COUNT_FAILURE, payload: error };\r\n};\r\n\r\nexport function incListsCount(user) {\r\n  return (dispatch) => {\r\n    dispatch(counterIncRequest());\r\n    incTodolistsCount(user.todoLists_count).then(() => {\r\n      dispatch(counterIncSuccess(user));\r\n    }).catch = (err) => {\r\n      console.error(\"increce todo-lists count failed\");\r\n      dispatch(counterIncFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** remove List  ****/\r\nconst removeListRequest = () => {\r\n  return { type: todoListsActions.REMOVE_LIST_REQUEST };\r\n};\r\n\r\nconst removeListSuccess = (list) => {\r\n  return {\r\n    type: todoListsActions.REMOVE_LIST_SUCCESS,\r\n    payload: { list },\r\n  };\r\n};\r\n\r\nconst removeListFailure = (error) => {\r\n  return { type: todoListsActions.REMOVE_LIST_FAILURE, payload: error };\r\n};\r\n\r\nexport function removeList(list) {\r\n  return (dispatch) => {\r\n    dispatch(removeListRequest());\r\n    removeTodoList(list).then(() => {\r\n      dispatch(removeListSuccess(list));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(removeListFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** restore List  ****/\r\nconst restoreListRequest = () => {\r\n  return { type: todoListsActions.RESTORE_LIST_REQUEST };\r\n};\r\n\r\nconst restoreListSuccess = (list) => {\r\n  return {\r\n    type: todoListsActions.RESTORE_LIST_SUCCESS,\r\n    payload: { list },\r\n  };\r\n};\r\n\r\nconst restoreListFailure = (error) => {\r\n  return { type: todoListsActions.RESTORE_LIST_FAILURE, payload: error };\r\n};\r\n\r\nexport function restoreList(list) {\r\n  return (dispatch) => {\r\n    dispatch(restoreListRequest());\r\n    restoreTodoList(list).then(() => {\r\n      dispatch(restoreListSuccess(list));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(restoreListFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** DELETE List  ****/\r\nconst DELETElistRequest = () => {\r\n  return { type: todoListsActions.DELETE_LIST_REQUEST };\r\n};\r\n\r\nconst DELETElistSuccess = (list) => {\r\n  return {\r\n    type: todoListsActions.DELETE_LIST_SUCCESS,\r\n    payload: { list },\r\n  };\r\n};\r\n\r\nconst DELETElistFailure = (error) => {\r\n  return { type: todoListsActions.DELETE_LIST_FAILURE, payload: error };\r\n};\r\n\r\nexport function DELETElist(list) {\r\n  return (dispatch) => {\r\n    dispatch(DELETElistRequest());\r\n    DELETEtodoList(list).then(() => {\r\n      dispatch(DELETElistSuccess(list));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(DELETElistFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** change list colors  ****/\r\nconst changeListColorRequest = () => {\r\n  return { type: todoListsActions.CHANGE_LIST_COLOR_REQUEST };\r\n};\r\n\r\nconst changeListColorSuccess = (list, color) => {\r\n  return {\r\n    type: todoListsActions.CHANGE_LIST_COLOR_SUCCESS,\r\n    payload: { list, color },\r\n  };\r\n};\r\nconst changeListColorFailure = (error) => {\r\n  return { type: todoListsActions.CHANGE_LIST_COLOR_FAILURE, payload: error };\r\n};\r\nexport function listChangeColor(list, color) {\r\n  return (dispatch) => {\r\n    dispatch(changeListColorRequest());\r\n    listChangedColor(list, color).then(() => {\r\n      dispatch(changeListColorSuccess(list, color));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(changeListColorFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** history btn toggle  ****/\r\nconst historyBtnToggleRequest = () => {\r\n  return { type: todoListsActions.HISTORY_BTN_REQUEST };\r\n};\r\n\r\nconst historyBtnToggleSuccess = (user) => {\r\n  return {\r\n    type: todoListsActions.HISTORY_BTN_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nconst historyBtnToggleFailure = (error) => {\r\n  return { type: todoListsActions.HISTORY_BTN_FAILURE, payload: error };\r\n};\r\n\r\nexport function historyBtnToggler(user) {\r\n  return (dispatch) => {\r\n    dispatch(historyBtnToggleRequest());\r\n    toggleTodosHistory().then(() => {\r\n      dispatch(historyBtnToggleSuccess(user));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(historyBtnToggleFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* list name in edit */\r\nconst inEditListrequest = (listId) => {\r\n  return { type: todoListsActions.IN_EDIT_LIST, payload: { listId } };\r\n};\r\n\r\nexport function inEditList(listId) {\r\n  return (dispatch) => {\r\n    dispatch(inEditListrequest(listId));\r\n  };\r\n}\r\n\r\n/*list name todo out edit */\r\nconst outEditListRequest = (listId) => {\r\n  return { type: todoListsActions.OUT_EDIT_LIST, payload: { listId } };\r\n};\r\n\r\nexport function outEditList(listId) {\r\n  return (dispatch) => {\r\n    dispatch(outEditListRequest(listId));\r\n  };\r\n}\r\n\r\n/**** edit list name  ****/\r\nconst editListNameRequest = () => {\r\n  return { type: todoListsActions.EDIT_LIST_NAME_REQUEST };\r\n};\r\n\r\nconst editListNameSuccess = (listId, value) => {\r\n  return {\r\n    type: todoListsActions.EDIT_LIST_NAME_SUCCESS,\r\n    payload: { listId, value },\r\n  };\r\n};\r\n\r\nconst editListNameFailure = (error) => {\r\n  return { type: todoListsActions.EDIT_LIST_NAME_FAILURE, payload: error };\r\n};\r\n\r\nexport function editListName(listId, value) {\r\n  return (dispatch) => {\r\n    dispatch(editListNameRequest());\r\n    editedListName(listId, value).then(() => {\r\n      dispatch(editListNameSuccess(listId, value));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(editListNameFailure(err));\r\n    };\r\n  };\r\n}\r\n","import todoActions from \"./todoTypes\";\r\nimport {\r\n  createTodoo,\r\n  incrementTodosCount,\r\n  removedTodo,\r\n  restoredTodo,\r\n  DELETEDtodo,\r\n  editTodoo,\r\n  toggledIsChecked,\r\n} from \"../../../services/todosService\";\r\n\r\n/* add todo */\r\nconst addTodoRequest = () => {\r\n  return { type: todoActions.ADD_TODO_REQUEST };\r\n};\r\n\r\nconst addTodoSuccess = (todo, listId) => {\r\n  return {\r\n    type: todoActions.ADD_TODO_SUCCESS,\r\n    payload: { todo, listId },\r\n  };\r\n};\r\n\r\nconst addTodoFailure = (error) => {\r\n  return { type: todoActions.ADD_TODO_FAILURE, payload: error };\r\n};\r\n\r\nexport function addTodo(todo, listId) {\r\n  return (dispatch) => {\r\n    dispatch(addTodoRequest());\r\n    createTodoo(todo, listId).then(() => {\r\n      dispatch(addTodoSuccess(todo, listId));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(addTodoFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* edit todo */\r\nconst editTodoRequest = () => {\r\n  return { type: todoActions.EDIT_TODO_REQUEST };\r\n};\r\n\r\nconst editTodoSuccess = (todo, listId, newText) => {\r\n  return {\r\n    type: todoActions.EDIT_TODO_SUCCESS,\r\n    payload: { todo, listId, newText },\r\n  };\r\n};\r\n\r\nconst editTodoFailure = (error) => {\r\n  return { type: todoActions.EDIT_TODO_FAILURE, payload: error };\r\n};\r\n\r\nexport function editTodo(todo, listId, newText) {\r\n  return (dispatch) => {\r\n    dispatch(editTodoRequest());\r\n    editTodoo(todo, listId, newText).then(() => {\r\n      dispatch(editTodoSuccess(todo, listId, newText));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(editTodoFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* toggle todo isChecked */\r\nconst toggleIsCheckedRequest = () => {\r\n  return { type: todoActions.TOGGLE_ISCHECKED_REQUEST };\r\n};\r\n\r\nconst oggleIsCheckedSuccess = (listId, todo) => {\r\n  return {\r\n    type: todoActions.TOGGLE_ISCHECKED_SUCCESS,\r\n    payload: { listId, todo },\r\n  };\r\n};\r\n\r\nconst oggleIsCheckedFailure = (error) => {\r\n  return { type: todoActions.TOGGLE_ISCHECKED_FAILURE, payload: error };\r\n};\r\n\r\nexport function toggleIsChecked(listId, todo) {\r\n  return (dispatch) => {\r\n    console.log(listId, todo);\r\n    dispatch(toggleIsCheckedRequest());\r\n    console.log(111);\r\n    toggledIsChecked(listId, todo).then(() => {\r\n      console.log(222);\r\n      dispatch(oggleIsCheckedSuccess(listId, todo));\r\n      console.log(333);\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(oggleIsCheckedFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/**** Todos cunter inc  ****/\r\nconst incTodosRequest = () => {\r\n  return { type: todoActions.INC_TODOS_COUNT_REQUEST };\r\n};\r\n\r\nconst incTodosSuccess = (listId) => {\r\n  return {\r\n    type: todoActions.INC_TODOS_COUNT_SUCCESS,\r\n    payload: { listId },\r\n  };\r\n};\r\n\r\nconst incTodosFailure = (error) => {\r\n  return { type: todoActions.INC_TODOS_COUNT_FAILURE, payload: error };\r\n};\r\n\r\nexport function incTodosCount(listId) {\r\n  return (dispatch) => {\r\n    dispatch(incTodosRequest());\r\n    incrementTodosCount(listId).then(() => {\r\n      dispatch(incTodosSuccess(listId));\r\n    }).catch = (err) => {\r\n      console.error(\"increce todo-lists count failed\");\r\n      dispatch(incTodosFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* remove todo */\r\nconst removeTodoRequest = () => {\r\n  return { type: todoActions.REMOVE_TODO_REQUEST };\r\n};\r\nconst removeTodoSuccess = (todo, listId) => {\r\n  return {\r\n    type: todoActions.REMOVE_TODO_SUCCESS,\r\n    payload: { todo, listId },\r\n  };\r\n};\r\nconst removeTodoFailure = (error) => {\r\n  return { type: todoActions.REMOVE_TODO_FAILURE, payload: error };\r\n};\r\nexport function removeTodo(todo, listId) {\r\n  return (dispatch) => {\r\n    dispatch(removeTodoRequest());\r\n    removedTodo(todo, listId).then(() => {\r\n      dispatch(removeTodoSuccess(todo, listId));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(removeTodoFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* remove todo */\r\nconst restoreTodoRequest = () => {\r\n  return { type: todoActions.RESTORE_TODO_REQUEST };\r\n};\r\nconst restoreTodoSuccess = (todo, listId) => {\r\n  return {\r\n    type: todoActions.RESTORE_TODO_SUCCESS,\r\n    payload: { todo, listId },\r\n  };\r\n};\r\nconst restoreTodoFailure = (error) => {\r\n  return { type: todoActions.RESTORE_TODO_FAILURE, payload: error };\r\n};\r\n\r\nexport function restoreTodo(todo, listId) {\r\n  return (dispatch) => {\r\n    dispatch(restoreTodoRequest());\r\n    restoredTodo(todo, listId).then(() => {\r\n      dispatch(restoreTodoSuccess(todo, listId));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(restoreTodoFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* DELETE todo */\r\nconst DeleteTodoRequest = () => {\r\n  return { type: todoActions.DELETE_TODO_REQUEST };\r\n};\r\nconst DeleteTodoSuccess = (todo, listId) => {\r\n  return {\r\n    type: todoActions.DELETE_TODO_SUCCESS,\r\n    payload: { todo, listId },\r\n  };\r\n};\r\nconst DeleteTodoFailure = (error) => {\r\n  return { type: todoActions.DELETE_TODO_FAILURE, payload: error };\r\n};\r\n\r\nexport function DELETEtodo(todo, listId) {\r\n  return (dispatch) => {\r\n    dispatch(DeleteTodoRequest());\r\n    DELETEDtodo(todo, listId).then(() => {\r\n      dispatch(DeleteTodoSuccess(todo, listId));\r\n    }).catch = (err) => {\r\n      console.error(\"first login rejected\");\r\n      dispatch(DeleteTodoFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\n/* todo in edit */\r\nconst inEditTodoquest = (todo, listId) => {\r\n  return { type: todoActions.IN_EDIT_TODO, payload: { todo, listId } };\r\n};\r\n\r\nexport function inEditTodo(todo, listId) {\r\n  return (dispatch) => {\r\n    dispatch(inEditTodoquest(todo, listId));\r\n  };\r\n}\r\n\r\n/* todo out edit */\r\nconst outEditTodoquest = (todo, listId) => {\r\n  return { type: todoActions.OUT_EDIT_TODO, payload: { todo, listId } };\r\n};\r\n\r\nexport function outEditTodo(todo, listId) {\r\n  return (dispatch) => {\r\n    dispatch(outEditTodoquest(todo, listId));\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Form from \"../../common/form\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTodo,\r\n  incTodosCount,\r\n} from \"../../../store/todoLists/todo/todoActions\";\r\n\r\nclass AddTodoForm extends Form {\r\n  state = {\r\n    text: \"\",\r\n  };\r\n\r\n  valueChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  doSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.text.length > 0) {\r\n      const { list } = this.props;\r\n      const listId = list.id;\r\n      const count = list.todosCount + 1;\r\n      let todo = {\r\n        title: this.state.text,\r\n        isChecked: false,\r\n        id: listId + \"-\" + count,\r\n        isDeleted: false,\r\n        inEdit: false,\r\n      };\r\n\r\n      await this.props.addTodo(todo, listId);\r\n      await this.props.incTodosCount(listId);\r\n    }\r\n    this.setState({ text: \"\" });\r\n    this.textInput.focus();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todoForm_input\">\r\n        <form className=\"form\" autoComplete=\"off\" name=\"newTodo_form\">\r\n          <input\r\n            ref={(el) => {\r\n              this.textInput = el;\r\n            }}\r\n            className=\"\"\r\n            type=\"text\"\r\n            value={this.state.text}\r\n            onChange={(e) => this.valueChange(e)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={(e) => {\r\n              this.doSubmit(e);\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (todo, id) => dispatch(addTodo(todo, id)),\r\n    incTodosCount: (count) => dispatch(incTodosCount(count)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editTodo,\r\n  outEditTodo,\r\n} from \"../../../store/todoLists/todo/todoActions\";\r\n\r\nclass EditTodo extends Component {\r\n  state = {\r\n    todoValue: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { todo } = this.props;\r\n    this.setState({ todoValue: todo.title });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ todoValue: e.target.value });\r\n  }\r\n  async handleEditTodo(list, todo) {\r\n    const newText = this.state.todoValue;\r\n    if (newText.length > 0) await this.props.editTodo(todo, list.id, newText);\r\n    else await this.props.editTodo(todo, list.id, todo.title);\r\n\r\n    await this.props.outEditTodo(todo, list.id);\r\n  }\r\n  render() {\r\n    const { todo, list } = this.props;\r\n    return (\r\n      <div>\r\n        <input\r\n          ref={(el) => {\r\n            this.textInput = el && el.focus();\r\n          }}\r\n          className=\"item\"\r\n          value={this.state.todoValue}\r\n          onChange={(e) => {\r\n            this.handleChange(e);\r\n          }}\r\n          onBlur={() => {\r\n            this.handleEditTodo(list, todo);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    outEditTodo: (todo, listId) => dispatch(outEditTodo(todo, listId)),\r\n    editTodo: (todo, listid, newText) =>\r\n      dispatch(editTodo(todo, listid, newText)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTodo);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  removeTodo,\r\n  toggleIsChecked,\r\n  inEditTodo,\r\n} from \"../../../store/todoLists/todo/todoActions\";\r\nimport { getHighlightedText } from \"../../../services/utils\";\r\nimport EditTodo from \"./editTodo\";\r\n\r\nclass TodoItem extends Component {\r\n  state = {\r\n    inEdit: false,\r\n  };\r\n\r\n  /* delete todo */\r\n  handleDeleteTodo(todo, list) {\r\n    console.log(todo);\r\n    this.props.removeTodo(todo, list.id);\r\n  }\r\n\r\n  /* check in/out todo */\r\n  toggleIsChecked(list, todo) {\r\n    console.log(list.id);\r\n    this.props.toggleIsChecked(list.id, todo);\r\n  }\r\n\r\n  render() {\r\n    const { todo, list, history } = this.props;\r\n    const { search } = this.props.data;\r\n    let title = getHighlightedText(todo.title, search);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"flex todoItem_main\">\r\n          {!history && (\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={todo.isChecked}\r\n              onChange={() => this.toggleIsChecked(list, todo)}\r\n            />\r\n          )}\r\n          {!todo.inEdit && (\r\n            <div\r\n              className=\"item\"\r\n              onClick={() => {\r\n                this.props.inEditTodo(todo, list.id);\r\n              }}\r\n            >\r\n              {title}\r\n            </div>\r\n          )}\r\n\r\n          {todo.inEdit && <EditTodo todo={todo} list={list} />}\r\n\r\n          <div className=\"button_div\">\r\n            {!history && (\r\n              <img\r\n                src=\"https://cdn.iconscout.com/icon/premium/png-256-thumb/delete-759-552068.png\"\r\n                alt=\"\"\r\n                className=\"delete\"\r\n                onClick={() => {\r\n                  this.handleDeleteTodo(todo, list);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeTodo: (todo, listId) => dispatch(removeTodo(todo, listId)),\r\n    inEditTodo: (todo, listId) => dispatch(inEditTodo(todo, listId)),\r\n    toggleIsChecked: (listid, todo) => dispatch(toggleIsChecked(listid, todo)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\r\n","export const colorsObj = {\r\n  purple: \"#D7AEFB\",\r\n  red: \"#EA715A\",\r\n  yellow: \"#F7E6AF\",\r\n  green: \"#AED67B\",\r\n  gray: \"#D5DEE9\",\r\n  pink: \"#F096BE\",\r\n};\r\n\r\n/* returns rndom color */\r\nexport const randColor = () => {\r\n  let rand = Math.floor(Math.random() * Object.keys(colorsObj).length);\r\n  // console.log(Object.keys(colorsObj)[rand]);\r\n  return Object.values(colorsObj)[rand];\r\n};\r\nconst exports = {\r\n  randColor,\r\n};\r\nexport default exports;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  restoreTodo,\r\n  DELETEtodo,\r\n} from \"../../../store/todoLists/todo/todoActions\";\r\nimport { getHighlightedText } from \"../../../services/utils\";\r\n\r\nclass RemovedItem extends Component {\r\n  state = {};\r\n\r\n  handleRestoreTodo(todo, list) {\r\n    this.props.restoreTodo(todo, list.id);\r\n  }\r\n  handleDELETEtodo(todo, list) {\r\n    this.props.DELETEtodo(todo, list.id);\r\n  }\r\n\r\n  render() {\r\n    const { todo, list, history } = this.props;\r\n    const { search } = this.props.data;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"flex removeItem_main\">\r\n          <div className=\"item\">{getHighlightedText(todo.title, search)} </div>\r\n\r\n          {!history && (\r\n            <div className=\"img_div\">\r\n              <img\r\n                src=\"https://cdn1.iconfinder.com/data/icons/social-messaging-ui-color/254000/04-512.png\"\r\n                alt=\"\"\r\n                className=\"restore\"\r\n                onClick={() => {\r\n                  this.handleRestoreTodo(todo, list);\r\n                }}\r\n              />\r\n              <img\r\n                src=\"https://freepikpsd.com/wp-content/uploads/2019/10/delete-icon-png-8-Transparent-Images.png\"\r\n                alt=\"\"\r\n                className=\"restore\"\r\n                onClick={() => {\r\n                  this.handleDELETEtodo(todo, list);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    restoreTodo: (todo, listId) => dispatch(restoreTodo(todo, listId)),\r\n    DELETEtodo: (todo, listId) => dispatch(DELETEtodo(todo, listId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemovedItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  outEditList,\r\n  editListName,\r\n} from \"../../../store/todoLists/lists/listsActions\";\r\n\r\nclass EditListTitle extends Component {\r\n  state = {\r\n    listName: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { list } = this.props;\r\n    this.setState({ listName: list.list_name });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ listName: e.target.value });\r\n  }\r\n  async handleEditListName(list) {\r\n    let { listName } = this.state;\r\n    if (listName.length > 0) {\r\n      await this.props.editListName(list.id, listName);\r\n    } else {\r\n      await this.props.editListName(list.id, list.list_name);\r\n    }\r\n    await this.props.outEditList(list.id);\r\n  }\r\n  render() {\r\n    const { list } = this.props;\r\n    return (\r\n      <div>\r\n        <input\r\n          ref={(el) => {\r\n            this.textInput = el && el.focus();\r\n          }}\r\n          value={this.state.listName}\r\n          onChange={(e) => {\r\n            this.handleChange(e);\r\n          }}\r\n          onBlur={() => {\r\n            this.handleEditListName(list);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    outEditList: (listId) => dispatch(outEditList(listId)),\r\n    editListName: (listid, value) => dispatch(editListName(listid, value)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditListTitle);\r\n","import React, { Component } from \"react\";\r\nimport AddTodoForm from \"./todoForm\";\r\nimport TodoItem from \"./todoItem\";\r\nimport { colorsObj } from \"../../../services/colorService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  removeList,\r\n  listChangeColor,\r\n  inEditList,\r\n} from \"../../../store/todoLists/lists/listsActions\";\r\nimport { myActiveTodosCount } from \"../../../services/todosService\";\r\nimport RemovedItem from \"./removedItem\";\r\nimport { getHighlightedText } from \"../../../services/utils\";\r\nimport EditListTitle from \"./editListTitle\";\r\n\r\nclass TodoList extends Component {\r\n  state = {\r\n    colorEdit: false,\r\n  };\r\n\r\n  async removeTodoList(list, user) {\r\n    let listCount = await myActiveTodosCount();\r\n    await this.props.removeList(list, listCount);\r\n  }\r\n\r\n  toggleEditColors(state) {\r\n    console.log(111);\r\n    !this.state.colorEdit\r\n      ? this.setState({ colorEdit: true })\r\n      : this.setState({ colorEdit: false });\r\n  }\r\n\r\n  handdleColor(list, color) {\r\n    this.props.listChangeColor(list, color);\r\n  }\r\n\r\n  someFunc(todos) {\r\n    /* checks for deleted todos and returns an <hr> between */\r\n    return todos.some((todo) => {\r\n      return todo.isDeleted;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { list, i } = this.props;\r\n    const { user, search } = this.props.data;\r\n    const colorsArr = [...Object.values(colorsObj)];\r\n    const colorEdit = this.state;\r\n    const listName = getHighlightedText(list.list_name, search);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {list && !list.isDeleted && (\r\n          <React.Fragment>\r\n            <div\r\n              className=\"todoList_main\"\r\n              style={{ backgroundColor: list.list_color }}\r\n            >\r\n              <div className=\"todoList_main_flex\">\r\n                {!list.inEditTitle && (\r\n                  <h4\r\n                    onClick={() => {\r\n                      this.props.inEditList(list.id);\r\n                    }}\r\n                  >\r\n                    {listName}\r\n                  </h4>\r\n                )}\r\n\r\n                {list.inEditTitle && <EditListTitle list={list} />}\r\n\r\n                <div className=\"flex3\">\r\n                  <img\r\n                    src=\"https://cdn.iconscout.com/icon/premium/png-256-thumb/color-plate-58-808898.png\"\r\n                    alt=\"edit colors\"\r\n                    onClick={() => {\r\n                      this.toggleEditColors(colorEdit);\r\n                    }}\r\n                  />\r\n                  <img\r\n                    src=\"https://cdn.iconscout.com/icon/premium/png-256-thumb/delete-759-552068.png\"\r\n                    alt=\"\"\r\n                    onClick={() => {\r\n                      this.removeTodoList(list, user);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {this.state.colorEdit && (\r\n                  <React.Fragment>\r\n                    <div className=\"colors_div\">\r\n                      {colorsArr &&\r\n                        colorsArr.map((color, i) => (\r\n                          <React.Fragment key={i}>\r\n                            <div\r\n                              style={{ backgroundColor: color }}\r\n                              onClick={() => {\r\n                                this.handdleColor(list, color);\r\n                              }}\r\n                            ></div>\r\n                          </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <AddTodoForm list={list} i={i} />\r\n              </div>\r\n              <div>\r\n                {list.todos &&\r\n                  list.todos.length &&\r\n                  list.todos.map((todo, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {!todo.isDeleted && <TodoItem list={list} todo={todo} />}\r\n                    </React.Fragment>\r\n                  ))}\r\n                {list.todos &&\r\n                  list.todos.length &&\r\n                  this.someFunc(list.todos) && <hr />}\r\n\r\n                {list.todos &&\r\n                  list.todos.length &&\r\n                  list.todos.map((todo, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {todo.isDeleted && (\r\n                        <RemovedItem list={list} todo={todo} />\r\n                      )}\r\n                    </React.Fragment>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeList: (list) => dispatch(removeList(list)),\r\n    listChangeColor: (list, color) => dispatch(listChangeColor(list, color)),\r\n    inEditList: (list) => dispatch(inEditList(list)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React from \"react\";\r\nimport Form from \"../../common/form\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  addTodoList,\r\n  incListsCount,\r\n} from \"../../../store/todoLists/lists/listsActions\";\r\n\r\nimport { randColor } from \"../../../services/colorService\";\r\n\r\nclass NewListForm extends Form {\r\n  state = {\r\n    list_name: \"\",\r\n  };\r\n\r\n  valueChange = (e) => {\r\n    this.setState({ list_name: e.target.value });\r\n  };\r\n\r\n  doSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { user } = this.props.data;\r\n    const { list_name } = this.state;\r\n    let listCount = user.todoLists_count + 1;\r\n    listCount = user._id + \"-\" + String(listCount);\r\n    const listColor = await randColor();\r\n\r\n    let list = {\r\n      list_name: list_name,\r\n      user_id: user._id,\r\n      id: listCount,\r\n      list_color: listColor,\r\n      peack_color: false,\r\n    };\r\n    if (list.list_name === \"\") list.list_name = \"New Todo List\";\r\n    try {\r\n      await this.props.addTodoList(list);\r\n      await this.props.incListsCount(user);\r\n      toast(\"new todo list added\");\r\n      this.setState({ list_name: \"\" });\r\n\r\n      e.target.value = \"\";\r\n      this.textInput.value = \"\";\r\n      this.textInput.focus();\r\n    } catch {\r\n      console.log(\"bahhhh\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.data;\r\n    return (\r\n      <div className=\"newList_form\">\r\n        {!user.todos_history && (\r\n          <form\r\n            className=\"form\"\r\n            autoComplete=\"off\"\r\n            name=\"newList_form\"\r\n            onSubmit={(e) => {\r\n              this.doSubmit(e);\r\n            }}\r\n          >\r\n            <input\r\n              ref={(el) => {\r\n                this.textInput = el;\r\n              }}\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={this.state.text}\r\n              onChange={(e) => this.valueChange(e)}\r\n            />\r\n            <button className=\"btn btn-primary\">Add</button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodoList: (list, count) => dispatch(addTodoList(list, count)),\r\n    incListsCount: (count) => dispatch(incListsCount(count)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewListForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { toast } from \"react-toastify\";\r\nimport { historyBtnToggler } from \"../../../store/todoLists/lists/listsActions\";\r\n\r\nclass HistoryButton extends Component {\r\n  state = {};\r\n\r\n  async handleClick(user) {\r\n    await this.props.historyBtnToggler(user);\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.data;\r\n    const history = user.todos_history;\r\n    return (\r\n      <div className=\"\">\r\n        <button\r\n          className=\"btn btn-info history_btn\"\r\n          onClick={() => {\r\n            this.handleClick(user);\r\n          }}\r\n        >\r\n          {!history && <React.Fragment>Todos History</React.Fragment>}\r\n          {history && <React.Fragment>Todo-Lists</React.Fragment>}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    historyBtnToggler: (user) => dispatch(historyBtnToggler(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryButton);\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./todoItem\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  restoreList,\r\n  DELETElist,\r\n} from \"../../../store/todoLists/lists/listsActions\";\r\nimport { swalConfitm } from \"../../../services/utils\";\r\nimport RemovedItem from \"./removedItem\";\r\n\r\nclass HistoryLists extends Component {\r\n  someFunc(todos) {\r\n    /* checks for deleted todos and returns an <hr> between */\r\n    return todos.some((todo) => {\r\n      return todo.isDeleted;\r\n    });\r\n  }\r\n  async handdleRestore(list) {\r\n    this.props.restoreList(list);\r\n  }\r\n\r\n  async handdleDELETE(list) {\r\n    const prompt = await swalConfitm();\r\n    if (prompt) {\r\n      this.props.DELETElist(list);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { list } = this.props;\r\n    return (\r\n      <div\r\n        className=\"todoList_main\"\r\n        style={{ backgroundColor: list.list_color }}\r\n      >\r\n        <div>\r\n          <div className=\"todoList_main_flex\">\r\n            <h4>{list.list_name}</h4>\r\n            <div className=\"flex3\">\r\n              <img\r\n                src=\"https://cdn1.iconfinder.com/data/icons/social-messaging-ui-color/254000/04-512.png\"\r\n                alt=\"edit colors\"\r\n                onClick={() => {\r\n                  this.handdleRestore(list);\r\n                }}\r\n              />\r\n              <img\r\n                src=\"https://freepikpsd.com/wp-content/uploads/2019/10/delete-icon-png-8-Transparent-Images.png\"\r\n                alt=\"\"\r\n                onClick={() => {\r\n                  this.handdleDELETE(list);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {list.todos &&\r\n              list.todos.length &&\r\n              list.todos.map((todo, i) => (\r\n                <React.Fragment key={i}>\r\n                  {!todo.isDeleted && (\r\n                    <TodoItem list={list} todo={todo} history={true} />\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            {list.todos && list.todos.length && this.someFunc(list.todos) && (\r\n              <hr />\r\n            )}{\" \"}\r\n            {list.todos &&\r\n              list.todos.length &&\r\n              list.todos.map((todo, i) => (\r\n                <React.Fragment key={i}>\r\n                  {todo.isDeleted && (\r\n                    <RemovedItem list={list} todo={todo} history={true} />\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    restoreList: (list) => dispatch(restoreList(list)),\r\n    DELETElist: (list) => dispatch(DELETElist(list)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryLists);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"../../../store/initialData/initActions\";\r\nimport { firstLogin } from \"../../../store/firstLogin/flActions\";\r\nimport { addTodoList } from \"../../../store/todoLists/lists/listsActions\";\r\nimport TodoLists from \"./lists\";\r\nimport NewListForm from \"./newListForm\";\r\nimport { randColor } from \"../../../services/colorService\";\r\nimport HistoryButton from \"./historyBtn\";\r\nimport HistoryLists from \"./HistoryLists\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../../common/header\";\r\nimport { todosSearchFilter } from \"../../../services/searchService\";\r\nimport { getCurrentUser } from \"../../../services/userService\";\r\n\r\nclass MyTodos extends Component {\r\n  state = {\r\n    title: \"Todos\",\r\n    sortLists: \"asc\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { user } = this.props.data;\r\n\r\n    if (user.firstLogin === false) {\r\n      await this.hadleFirstTodoList(user);\r\n    }\r\n  }\r\n\r\n  async hadleFirstTodoList(user) {\r\n    const list = {\r\n      list_name: \"My First TodoList\",\r\n      user_id: user._id,\r\n      id: user._id + \"-\" + 1,\r\n      list_color: await randColor(),\r\n    };\r\n    await this.props.addTodoList(list);\r\n    await this.props.firstLogin(user);\r\n  }\r\n\r\n  sortChange(e) {\r\n    this.setState({ sortLists: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { user, search } = this.props.data;\r\n    let { userTodos } = this.props.data;\r\n    /* redirect !user */\r\n    let userLog = getCurrentUser();\r\n    if (userLog === null) return <Redirect to=\"/\" />;\r\n\r\n    let title;\r\n    let history = user.todos_history;\r\n    history ? (title = \"Todos History\") : (title = this.state.title);\r\n    /* search */\r\n    if (search.length > 0) {\r\n      userTodos = todosSearchFilter(userTodos, search);\r\n      title += \" Search\";\r\n    }\r\n    /* sort */\r\n    if (this.state.sortLists === \"desc\") {\r\n      userTodos = userTodos.reverse();\r\n    }\r\n\r\n    return (\r\n      <div className={!history ? \"todos\" : \"todos_history\"}>\r\n        <div className=\"strech\">\r\n          <Header title={title} />\r\n          <hr />\r\n          {/* todos manu div */}\r\n          <div className=\"todos_manu\">\r\n            <NewListForm />\r\n            <HistoryButton />\r\n          </div>\r\n          <div className=\"container\">\r\n            <hr />\r\n            {/* sort todos div */}\r\n            <div className=\"select_div\">\r\n              <select\r\n                onChange={(e) => {\r\n                  this.sortChange(e);\r\n                }}\r\n              >\r\n                <option value=\"asc\">new to old</option>\r\n                <option value=\"desc\">old to new</option>\r\n              </select>\r\n            </div>\r\n            {/* user todolist  lists */}\r\n            <div className=\"lists\">\r\n              {!user.todos_history &&\r\n                userTodos &&\r\n                userTodos.length > 0 &&\r\n                userTodos.map((list, i) => (\r\n                  <React.Fragment key={i}>\r\n                    {!list.isDeleted && <TodoLists list={list} i={i} />}\r\n                  </React.Fragment>\r\n                ))}\r\n              {/* no lists (from not deleted lists) */}\r\n              {!user.todos_history &&\r\n                userTodos &&\r\n                userTodos.filter((list) => {\r\n                  return list.isDeleted !== true;\r\n                }).length === 0 && (\r\n                  <div className=\"noTodos_div\">\r\n                    <div>no active todoList, start a new list</div>\r\n                  </div>\r\n                )}\r\n              {/* user todolist history lists */}\r\n              {user.todos_history &&\r\n                userTodos &&\r\n                userTodos.length > 0 &&\r\n                userTodos.map((list, i) => (\r\n                  <React.Fragment key={i}>\r\n                    {list.isDeleted && <HistoryLists list={list} i={i} />}\r\n                  </React.Fragment>\r\n                ))}\r\n              {/* no hystory lists (from deleted lists) */}\r\n              {user.todos_history &&\r\n                userTodos &&\r\n                userTodos.filter((list) => {\r\n                  return list.isDeleted === true;\r\n                }).length === 0 && (\r\n                  <div className=\"noTodos_div\">\r\n                    <div>no deleted TodoList, mabie next time..</div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchData: () => dispatch(fetchData()),\r\n    firstLogin: (user) => dispatch(firstLogin(user)),\r\n    addTodoList: (list) => dispatch(addTodoList(list)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTodos);\r\n","import {\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_FAILURE,\r\n} from \"./postsTypes\";\r\nimport { getAllPosts } from \"../../services/postService\";\r\nimport { getAllUsers } from \"../../services/userService\";\r\n\r\nconst fetchPostsRequest = () => {\r\n  return { type: FETCH_POSTS_REQUEST };\r\n};\r\n\r\nconst fetchPostsSuccess = (posts, users) => {\r\n  return {\r\n    type: FETCH_POSTS_SUCCESS,\r\n    payload: { posts, users },\r\n  };\r\n};\r\nconst fetchPostsFailure = (error) => {\r\n  return { type: FETCH_POSTS_FAILURE, payload: error };\r\n};\r\n\r\nexport const fetchPosts = (dispatch) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchPostsRequest());\r\n    getAllPosts()\r\n      .then((response) => {\r\n        const posts = response.data.map((post) => post);\r\n        getAllUsers().then((resp) => {\r\n          const users = resp.data.map((user) => user);\r\n          dispatch(fetchPostsSuccess(posts, users));\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchPostsFailure(error));\r\n      });\r\n  };\r\n};\r\nconst actions = {\r\n  fetchPosts,\r\n};\r\nexport default actions;\r\n","import UserActions from \"./editUserTypes\";\r\nimport { editUserService } from \"../../services/userService\";\r\n\r\nconst editUserRequest = () => {\r\n  return { type: UserActions.EDIT_USER_REQUEST };\r\n};\r\n\r\nconst editUserSuccess = (user, userId) => {\r\n  console.log(user);\r\n  return { type: UserActions.EDIT_USER_SUCCESS, payload: { user, userId } };\r\n};\r\n\r\nconst editUserFailure = (error) => {\r\n  return { type: UserActions.EDIT_USER_FAILURE, payload: error };\r\n};\r\n\r\nexport function editUser(user, userId) {\r\n  console.log(user);\r\n  return (dispatch) => {\r\n    dispatch(editUserRequest());\r\n    editUserService(user).then(() => {\r\n      dispatch(editUserSuccess(user, userId));\r\n    }).catch = (err) => {\r\n      console.error(\"user edit rejected\");\r\n      dispatch(editUserFailure(err));\r\n    };\r\n  };\r\n}\r\n","import userActions from \"./userTypes\";\r\nimport { DeletedUser } from \"../../services/userService\";\r\n\r\nconst DeleteUserRequest = () => {\r\n  return { type: userActions.DELETE_USER_REQUEST };\r\n};\r\n\r\nconst DeleteUserSuccess = (userId) => {\r\n  return {\r\n    type: userActions.DELETE_USER_SUCCESS,\r\n    payload: { userId },\r\n  };\r\n};\r\n\r\nconst DeleteUserFailure = (error) => {\r\n  return { type: userActions.DELETE_USER_FAILURE, payload: error };\r\n};\r\n\r\nexport function DeleteUser(userId) {\r\n  return (dispatch) => {\r\n    dispatch(DeleteUserRequest());\r\n    DeletedUser().then(() => {\r\n      dispatch(DeleteUserSuccess(userId));\r\n    }).catch = (err) => {\r\n      console.error(\"increce todo-lists count failed\");\r\n      dispatch(DeleteUserFailure(err));\r\n    };\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Form from \"../common/form\";\r\n\r\nimport { schema } from \"../../services/userService\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { editUser } from \"../../store/editUser/editUserActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { swalConfitm } from \"../../services/utils\";\r\nimport { DeleteUser } from \"../../store/user/userActions\";\r\nimport { DELETElist } from \"../../store/todoLists/lists/listsActions\";\r\nimport { DELeteImg } from \"../../store/userImg/userImgActions\";\r\nimport { getCurrentUser } from \"../../services/userService\";\r\n\r\nclass EditAccount extends Form {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.first_name = React.createRef();\r\n  }\r\n  state = {\r\n    data: {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      cell: \"\",\r\n      password: \"\",\r\n      password_confirm: \"\",\r\n    },\r\n    errors: {},\r\n    img_value: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { user } = this.props.data;\r\n    this.setState({\r\n      data: {\r\n        first_name: user.first_name,\r\n        last_name: user.last_name,\r\n        email: user.email,\r\n        cell: user.cell,\r\n      },\r\n    });\r\n  }\r\n\r\n  async handdleDELETE(user) {\r\n    const { userTodos, imgs } = this.props.data;\r\n\r\n    const prompt = await swalConfitm();\r\n    if (prompt) {\r\n      /* DELETE all user's todo lists */\r\n      for (let list of userTodos) {\r\n        await this.props.DELETElist(list);\r\n      }\r\n      /* DELETE all user's imgs */\r\n      for (let img of imgs) {\r\n        if (img.user_id === user._id) {\r\n          await this.props.DELeteImg(img.id);\r\n        }\r\n      }\r\n      /* ***** DELETE user *****  */\r\n      await this.props.DeleteUser(user._id);\r\n      window.location = \"/login\";\r\n    }\r\n  }\r\n  schema = schema; /* user's schema */\r\n\r\n  doSubmit = async () => {\r\n    const { user } = this.props.data;\r\n    const data = { ...this.state.data };\r\n    data.biz = user.biz;\r\n    data.gender = user.gender;\r\n\r\n    try {\r\n      await this.props.editUser(data, user._id);\r\n      toast(`${data.first_name} edit profile successfully`);\r\n      this.props.history.replace(\"/posts\");\r\n    } catch (ex) {\r\n      console.error(\"edit post failed\", ex);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.data;\r\n\r\n    /* redirect !user */\r\n    let userLog = getCurrentUser();\r\n    if (!userLog) return <Redirect to=\"/\" />;\r\n    console.log(this.state.img_value);\r\n    return (\r\n      <div id=\"createAcc_container\">\r\n        <div id=\"create_account\" className=\"create_account middleDiv\">\r\n          <h1 className=\"create_account_h1\">Edit Account</h1>\r\n          <form\r\n            className=\"create_account_form container\"\r\n            action=\"/login/create_account\"\r\n            method=\"POST\"\r\n            autoComplete=\"off\"\r\n            name=\"account_formm\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            {this.renderInput(\r\n              \"first_name\",\r\n              \"First Name\",\r\n              \"text\",\r\n              \"Enter your First Name\"\r\n            )}\r\n\r\n            {this.renderInput(\r\n              \"last_name\",\r\n              \"Last Name\",\r\n              \"text\",\r\n              \"Enter your Last Name\"\r\n            )}\r\n\r\n            {this.renderInput(\"email\", \"Email\", \"email\", \"Enter your email\")}\r\n\r\n            {this.renderInput(\"cell\", \"Cell\", \"phone\", \"Enter your Cell\")}\r\n\r\n            {this.renderInput(\r\n              \"password\",\r\n              \"Password\",\r\n              \"password\",\r\n              \"Enter your password\"\r\n            )}\r\n            {this.renderInput(\r\n              \"password_confirm\",\r\n              \"Password Confirm\",\r\n              \"password\",\r\n              \"ReEnter your password\"\r\n            )}\r\n\r\n            {this.renderButton(\"Edit\")}\r\n          </form>\r\n          {/* DELETE user btn */}\r\n          <div className=\"delete_user_div\">\r\n            <img\r\n              className=\"btn\"\r\n              src=\"/imgs/icons/delete-red.png\"\r\n              alt=\"\"\r\n              onClick={() => {\r\n                this.handdleDELETE(user);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editUser: (data, userId) => dispatch(editUser(data, userId)),\r\n    DeleteUser: (userId) => dispatch(DeleteUser(userId)),\r\n    DELETElist: (list) => dispatch(DELETElist(list)),\r\n    DELeteImg: (imgId) => dispatch(DELeteImg(imgId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAccount);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addImg,\r\n  uploadUserImg,\r\n  imgCounterInc,\r\n} from \"../../../store/userImg/userImgActions\";\r\n//\r\nimport { changeProfileImg } from \"../../../store/userImg/userImgActions\";\r\n\r\nclass AddImg extends Component {\r\n  state = {\r\n    img_value: \"/imgs/icons/user_icon.png\",\r\n    targetImg: \"\",\r\n  };\r\n  handleImg(e) {\r\n    this.setState({\r\n      img_value: URL.createObjectURL(e.target.files[0]),\r\n      targetImg: e.target.files[0],\r\n    });\r\n  }\r\n\r\n  /* upload img mathod */\r\n  async uploadImage(user, imgs) {\r\n    const myImgs = imgs.filter((img) => {\r\n      return img.user_id === user._id;\r\n    });\r\n    console.log(myImgs);\r\n    let imgCount = user.imgCounter + 1;\r\n    console.log(imgCount);\r\n    const imageFormObj = new FormData();\r\n    imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\r\n    imageFormObj.append(\"imageData\", this.state.targetImg);\r\n    imageFormObj.append(\"imageCount\", imgCount);\r\n    imageFormObj.append(\"bool\", imgCount === 1 ? true : false);\r\n\r\n    try {\r\n      await this.props.addImg(\r\n        imageFormObj,\r\n        this.state.img_value,\r\n        user._id,\r\n        imgCount\r\n      );\r\n      await this.props.uploadUserImg(user);\r\n      /* increment img counter */\r\n      await this.props.imgCounterInc(user);\r\n\r\n      if (!myImgs.length) {\r\n        /* if first img, make profile img */\r\n        const imgId = `${user._id}-${imgCount}`;\r\n        await this.props.changeProfileImg(imgId, user._id);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"error upload image\");\r\n    }\r\n    this.setState({\r\n      targetImg: \"\",\r\n      img_value: \"/imgs/icons/user_icon.png\",\r\n    });\r\n    this.fileInput.value = \"\";\r\n  }\r\n\r\n  render() {\r\n    const { targetImg } = this.state;\r\n    const { user, imgs } = this.props.data;\r\n    return (\r\n      <div>\r\n        <div className=\"image_container\">\r\n          <p className=\"procces_details\">Upload image here</p>\r\n          <div className=\"process\">\r\n            <input\r\n              ref={(el) => {\r\n                this.fileInput = el;\r\n              }}\r\n              type=\"file\"\r\n              className=\"process_upload-btn\"\r\n              onInput={(e) => this.handleImg(e, \"multer\", user)}\r\n            />\r\n            <img\r\n              src={this.state.img_value}\r\n              alt=\"upload\"\r\n              className=\"process_image\"\r\n            />\r\n          </div>\r\n          {targetImg && (\r\n            <div className=\"img_btn_div\">\r\n              <button\r\n                className=\"img_btn\"\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                  this.uploadImage(user, imgs, e);\r\n                }}\r\n              >\r\n                Set Image\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addImg: (img, urlImg, userId, imgCount) =>\r\n      dispatch(addImg(img, urlImg, userId, imgCount)),\r\n    uploadUserImg: (user) => dispatch(uploadUserImg(user)),\r\n    changeProfileImg: (imgId, userId) =>\r\n      dispatch(changeProfileImg(imgId, userId)),\r\n    imgCounterInc: (user) => dispatch(imgCounterInc(user)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddImg);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { imgUrl } from \"../../../config.json\";\r\nimport { changeProfileImg } from \"../../../store/userImg/userImgActions\";\r\n\r\nclass BigImg extends Component {\r\n  state = {\r\n    counter: 0,\r\n  };\r\n  componentDidMount() {\r\n    const { index } = this.props;\r\n    this.setState({ counter: index });\r\n  }\r\n\r\n  /* full screen imgs logic */\r\n  baxt(action, myImgs) {\r\n    let counter = this.state.counter;\r\n    if (action === \"back\") {\r\n      if (counter === 0) return this.setState({ counter: myImgs.length - 1 });\r\n      return this.setState({ counter: --counter });\r\n    }\r\n    if (action === \"next\") {\r\n      if (counter === myImgs.length - 1) return this.setState({ counter: 0 });\r\n      return this.setState({ counter: ++counter });\r\n    }\r\n  }\r\n\r\n  closeBigImg() {\r\n    this.props.closeImgs(false);\r\n  }\r\n  async setProfileImg(img) {\r\n    await this.props.changeProfileImg(img.id, img.user_id);\r\n  }\r\n\r\n  render() {\r\n    const { myImgs } = this.props;\r\n    /* if not refreshed, get imgs address from blob */\r\n    /* if refreshed, get imgs address from server */\r\n    let currentImg = `${imgUrl}/${myImgs[this.state.counter].imageData}`;\r\n    const img = myImgs[this.state.counter];\r\n    if (currentImg.includes(\"/blob\")) {\r\n      currentImg = myImgs[this.state.counter].imageData;\r\n    }\r\n\r\n    return (\r\n      <div className=\"main_black\">\r\n        <div\r\n          className=\"black_screen\"\r\n          onClick={() => {\r\n            this.closeBigImg();\r\n          }}\r\n        >\r\n          <div className=\"x btn\">x</div>\r\n        </div>\r\n        <div className=\"imd_div\">\r\n          <div\r\n            className=\" back\"\r\n            onClick={() => {\r\n              this.baxt(\"back\", myImgs);\r\n            }}\r\n          >\r\n            <div className=\"btn\"> &lt;</div>\r\n          </div>\r\n          <div className=\"big_img\">\r\n            {/* big-img */}\r\n            <img src={currentImg} alt=\"\" />\r\n            {/* set profile img */}\r\n            {!img.isProfileImg && (\r\n              <div\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  this.setProfileImg(img);\r\n                }}\r\n              >\r\n                Set Profile Image\r\n              </div>\r\n            )}\r\n            {/* make profile img */}\r\n            {img.isProfileImg && (\r\n              <div className=\"btn btn-success\">Profile Image</div>\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\" next\"\r\n            onClick={() => {\r\n              this.baxt(\"next\", myImgs);\r\n            }}\r\n          >\r\n            <div className=\"btn\">&gt;</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeProfileImg: (imgId, userId) =>\r\n      dispatch(changeProfileImg(imgId, userId)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BigImg);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddImg from \"./addImg\";\r\nimport Header from \"../../common/header\";\r\nimport Img from \"./img\";\r\nimport BigImg from \"./bigImg\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../../services/userService\";\r\n\r\nclass MyImgs extends Component {\r\n  state = {\r\n    bigImg: false,\r\n    index: 0,\r\n    sortPosts: \"asc\",\r\n  };\r\n  openBigImg(bool = true, i) {\r\n    this.setState({ bigImg: bool, index: i });\r\n  }\r\n  sortChange(e) {\r\n    this.setState({ sortPosts: e.target.value });\r\n  }\r\n  render() {\r\n    const { imgs, user } = this.props.data;\r\n    /* redirect  !user */\r\n    let userLog = getCurrentUser();\r\n    if (userLog === null) return <Redirect to=\"/\" />;\r\n\r\n    const { bigImg, sortPosts } = this.state;\r\n    let myImgs = imgs.reverse().filter((img) => {\r\n      return img.user_id === user._id;\r\n    });\r\n    console.log(myImgs.length);\r\n    if (myImgs.length === 1) {\r\n    }\r\n    if (sortPosts === \"desc\") {\r\n      myImgs = myImgs.reverse();\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"imgs_main\">\r\n          <Header title=\"My Images\" />\r\n          <hr />\r\n          <div>\r\n            <AddImg />\r\n          </div>\r\n          <hr />\r\n          <div className=\"select_div\">\r\n            <select\r\n              onChange={(e) => {\r\n                this.sortChange(e);\r\n              }}\r\n            >\r\n              <option value=\"asc\">new to old</option>\r\n              <option value=\"desc\">old to new</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"imgs\">\r\n            {myImgs &&\r\n              myImgs.length > 0 &&\r\n              myImgs.map((img, i) => (\r\n                <React.Fragment key={i}>\r\n                  <Img\r\n                    className=\"two\"\r\n                    img={img}\r\n                    i={i}\r\n                    openBigImg={() => {\r\n                      this.openBigImg(true, i);\r\n                    }}\r\n                  />\r\n                </React.Fragment>\r\n              ))}\r\n            {myImgs && myImgs.length === 0 && (\r\n              <div className=\"noImg_div\">\r\n                <div>no imgase yet, upload your first profile image</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {this.state.bigImg && (\r\n            <BigImg\r\n              index={this.state.index}\r\n              img={bigImg}\r\n              myImgs={myImgs}\r\n              closeImgs={() => {\r\n                this.openBigImg(false);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // outimgEditMOde: (imgId) => dispatch(outimgEditMOde(imgId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyImgs);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className=\"border-top pt-3 text-center footer\">\r\n      MyT &copy; by shay tamir {new Date().getFullYear()}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.scss\";\r\nimport Navbar from \"./components/common/navbar\";\r\nimport CreateAccout from \"./components/pages/createAccount\";\r\nimport Login from \"./components/pages/login\";\r\nimport Logout from \"./components/refs/logout\";\r\nimport userService from \"./services/userService\";\r\nimport Posts from \"./components/pages/posts/posts\";\r\nimport MyTodos from \"./components/pages/todos/myTodos\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"./store/initialData/initActions\";\r\nimport { fetchPosts } from \"./store/posts/postsActions\";\r\nimport EditAccount from \"./components/account/editAccount\";\r\nimport MyImgs from \"./components/pages/my-imgs/myImgs\";\r\nimport Footer from \"./components/common/footer\";\r\nclass App extends Component {\r\n  state = {};\r\n  async componentDidMount() {\r\n    const user = userService.getCurrentUser();\r\n    this.setState({ user });\r\n    if (user) {\r\n      await this.props.fetchData();\r\n    } else {\r\n      await this.props.fetchPosts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.user) {\r\n      /* do somthing */\r\n    }\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"App-header\">\r\n          <ToastContainer />\r\n          <Navbar user={user} />\r\n        </header>\r\n        <main className=\"main\">\r\n          <Switch>\r\n            {/* <ProtectedRoute path=\"/myv\" component={MyV} biz={true} /> */}\r\n            <Route path=\"/home\" component={Posts} />\r\n            <Route path=\"/posts\" component={Posts} />\r\n            <Route path=\"/todos\" component={MyTodos} />\r\n            <Route path=\"/my-images\" component={MyImgs} />\r\n            <Route path=\"/edit-profile\" component={EditAccount} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/create-account\" component={CreateAccout} />\r\n            <Route path=\"/Home\" component={Posts} />\r\n            <Route path=\"/\" component={Posts} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, more) => {\r\n  return {\r\n    user: state.user,\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchPosts: () => dispatch(fetchPosts()),\r\n  fetchData: () => dispatch(fetchData()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const round = (number) => Math.round(number * 100) / 100;\r\n\r\nconst monitorReducerEnhancer = (createStore) => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now();\r\n    const newState = reducer(state, action);\r\n    const end = performance.now();\r\n    const diff = round(end - start);\r\n\r\n    console.log(\"reducer process time:\", diff);\r\n\r\n    return newState;\r\n  };\r\n\r\n  return createStore(monitoredReducer, initialState, enhancer);\r\n};\r\n\r\nexport default monitorReducerEnhancer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import thunk from \"redux-thunk\";\r\n\r\nimport logger from \"redux-logger\";\r\nimport monitorReducerEnhancer from \"./middleware/monitorReducer\";\r\nconst thunk = require(\"redux-thunk\").default;\r\nconst rootReducer = require(\"./reducers.js\").default;\r\n\r\n/* #### */\r\n\r\nconst middlewareEnhancer = applyMiddleware(thunk, logger);\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  middlewareEnhancer,\r\n  monitorReducerEnhancer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(middlewareEnhancer)\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/popper\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\n// const preloadedState = store.getState();\r\n\r\nstore.subscribe((preloadedState) => {\r\n  console.log(store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","import {\r\n  ADD_POST,\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_FAILURE,\r\n} from \"./postsTypes\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  users: [],\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let posts = [\r\n        ...state.posts,\r\n        { post: action.payload.post, user_id: action.payload.user_id },\r\n      ];\r\n      return {\r\n        ...state,\r\n        posts,\r\n      };\r\n    case FETCH_POSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: action.payload.posts,\r\n        users: action.payload.users,\r\n        error: \"\",\r\n      };\r\n\r\n    case FETCH_POSTS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        posts: [],\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n","import dataActions from \"./initTypes\";\r\nimport UserActions from \"../editUser/editUserTypes\";\r\nimport firstLoginActions from \"../firstLogin/flTypes\";\r\nimport todoListsActions from \"../todoLists/lists/listsTypes\";\r\nimport todoActions from \"../todoLists/todo/todoTypes\";\r\nimport searchActions from \"../search/searchTypes\";\r\nimport addPostsActions from \"../posts/addPost/addPostActions\";\r\nimport likePostActions from \"../likes/likeTypes\";\r\nimport editPostActions from \"../posts/editPost/editPostTypes\";\r\nimport commentPostTypes from \"../posts/postsComments/commentsTypes\";\r\nimport userImgActions from \"../userImg/userImgTypes\";\r\nimport userActions from \"../user/userTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  posts: [],\r\n  user: {},\r\n  userTodos: [],\r\n  userPosts: [],\r\n  imgs: [],\r\n  loading: false,\r\n  error: \"\",\r\n  search: \"\",\r\n};\r\n\r\n/* fetch data */\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case dataActions.FETCH_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case dataActions.FETCH_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.posts,\r\n        users: action.payload.users,\r\n        user: action.payload.user,\r\n        userTodos: action.payload.userTodos,\r\n        imgs: action.payload.imgs,\r\n      };\r\n\r\n    case dataActions.FETCH_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /**** add post ****/\r\n    case addPostsActions.ADD_POSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case addPostsActions.ADD_POSTS_SUCCESS:\r\n      const newId =\r\n        action.payload.user._id + \"-\" + (action.payload.user.posts_count + 1);\r\n      const userName =\r\n        action.payload.user.first_name + \" \" + action.payload.user.last_name;\r\n      let posts = [\r\n        {\r\n          user_id: action.payload.user._id,\r\n          post: action.payload.post,\r\n          likes: [],\r\n          comments: [],\r\n          user_name: userName,\r\n          id: newId,\r\n          isEditOn: false,\r\n          isCommentsOn: false,\r\n        },\r\n        ...state.posts,\r\n      ];\r\n      state.user.posts_count += 1;\r\n      return {\r\n        ...state,\r\n        posts,\r\n      };\r\n\r\n    case addPostsActions.ADD_POSTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /**** like post ****/\r\n    case likePostActions.LIKE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case likePostActions.LIKE_POST_SUCCESS:\r\n      const likePost = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      likePost.likes = [...likePost.likes, action.payload.userId];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case likePostActions.LIKE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /**** un-like post ****/\r\n    case likePostActions.UNLIKE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case likePostActions.UNLIKE_POST_SUCCESS:\r\n      const unLikePost = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      unLikePost.likes = unLikePost.likes.filter((like) => {\r\n        return like === action.payload.userId;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case likePostActions.UNLIKE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /**** edit post-on post ****/\r\n    case editPostActions.EDIT_ON:\r\n      const editOn = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      editOn.isEditOn = true;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /**** edit post off post ****/\r\n    case editPostActions.EDIT_OFF:\r\n      const editOff = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      editOff.isEditOn = false;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /**** edit post  ****/\r\n    case editPostActions.EDIT_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case editPostActions.EDIT_POST_SUCCESS:\r\n      const editpost = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      editpost.post = action.payload.value;\r\n      return {\r\n        ...state,\r\n      };\r\n    case editPostActions.EDIT_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /**** add comment post  ****/\r\n    case commentPostTypes.ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case commentPostTypes.ADD_COMMENT_SUCCESS:\r\n      const addcComment = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      addcComment.comments.push(action.payload.comment);\r\n      return {\r\n        ...state,\r\n      };\r\n    case commentPostTypes.ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /****  post comments on ****/\r\n    case commentPostTypes.COMMENTS_POST_ON:\r\n      const commentsOn = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      commentsOn.isCommentsOn = true;\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /****  post comments off ****/\r\n    case commentPostTypes.COMMENTS_POST_OFF:\r\n      const commentsOff = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      commentsOff.isCommentsOn = false;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /**** edit comment post  ****/\r\n    case commentPostTypes.EDIT_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case commentPostTypes.EDIT_COMMENT_SUCCESS:\r\n      const editComment = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      const comment = editComment.comments.find((comment) => {\r\n        return comment.id === action.payload.comment.id;\r\n      });\r\n      comment.comment = action.payload.newValue;\r\n      return {\r\n        ...state,\r\n      };\r\n    case commentPostTypes.EDIT_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* comments in edit mode */\r\n    case commentPostTypes.COMMENTS_IN_EDIT:\r\n      const CommentsEdit = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      const inCommentEdit = CommentsEdit.comments.find((comment) => {\r\n        return comment.id === action.payload.commentId;\r\n      });\r\n      inCommentEdit.inEdit = true;\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /* comments out edit mode */\r\n    case commentPostTypes.COMMENTS_OUT_EDIT:\r\n      const CommentsEditOut = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      const outCommentEdit = CommentsEditOut.comments.find((comment) => {\r\n        return comment.id === action.payload.commentId;\r\n      });\r\n      outCommentEdit.inEdit = false;\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /**** delete comment post  ****/\r\n    case commentPostTypes.DELETE_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case commentPostTypes.DELETE_COMMENT_SUCCESS:\r\n      const deleteComment = state.posts.find((post) => {\r\n        return post.id === action.payload.postId;\r\n      });\r\n      deleteComment.comments = deleteComment.comments.filter((comment) => {\r\n        return comment.id !== action.payload.comment.id;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    case commentPostTypes.DELETE_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /**** DELETE post  ****/\r\n    case editPostActions.DELETE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case editPostActions.DELETE_POST_SUCCESS:\r\n      const deletePost = state.posts.filter((post) => {\r\n        return post.id !== action.payload.postId;\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: deletePost,\r\n      };\r\n    case editPostActions.DELETE_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* edit user */\r\n    case UserActions.EDIT_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case UserActions.EDIT_USER_SUCCESS:\r\n      const editedUser = action.payload.user;\r\n      editedUser._id = action.payload.userId;\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, editedUser },\r\n      };\r\n\r\n    case UserActions.EDIT_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* upload user img */\r\n    case userImgActions.USER_UPLOAD_IMG_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case userImgActions.USER_UPLOAD_IMG_SUCCESS:\r\n      const uploadImg = action.payload.user;\r\n      uploadImg.haveImg = true;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case userImgActions.USER_UPLOAD_IMG_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* add img */\r\n    case userImgActions.ADD_IMG_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case userImgActions.ADD_IMG_SUCCESS:\r\n      const imgId = `${action.payload.userId}-${action.payload.imgCount}`;\r\n      const imgBool = action.payload.imgCount === 1 ? true : false;\r\n      const addImg = {\r\n        imageName: \"\",\r\n        imageData: action.payload.urlImg,\r\n        user_id: action.payload.userId,\r\n        id: imgId,\r\n        isProfileImg: imgBool,\r\n        inEditMode: false,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        imgs: [...state.imgs, addImg],\r\n      };\r\n\r\n    case userImgActions.ADD_IMG_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* change profile img */\r\n    case userImgActions.PROFILE_IMG_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case userImgActions.PROFILE_IMG_SUCCESS:\r\n      const falseImg = state.imgs.find((img) => {\r\n        return (\r\n          img.user_id === action.payload.userId && img.isProfileImg === true\r\n        );\r\n      });\r\n      falseImg.isProfileImg = false;\r\n      const changeImg = state.imgs.find((img) => {\r\n        return img.id === action.payload.imgId;\r\n      });\r\n      changeImg.isProfileImg = true;\r\n\r\n      const ChangeUserImg = state.users.find((user) => {\r\n        return user._id === action.payload.userId;\r\n      });\r\n      ChangeUserImg.profile_img = action.payload.imgId;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case userImgActions.PROFILE_IMG_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* img in edit mode */\r\n    case userImgActions.IN_IMG_EDIT_MODE:\r\n      const inEditMode = state.imgs.find((img) => {\r\n        return img.id === action.payload.imgId;\r\n      });\r\n      inEditMode.inEditMode = true;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /* img out edit mode */\r\n    case userImgActions.OUT_IMG_EDIT_MODE:\r\n      const outEditMode = state.imgs.find((img) => {\r\n        return img.id === action.payload.imgId;\r\n      });\r\n      outEditMode.inEditMode = false;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /*  img counter increment */\r\n    case userImgActions.IMG_COUNTER_INC_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case userImgActions.IMG_COUNTER_INC_SUCCESS:\r\n      state.user.imgCounter += 1;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case userImgActions.IMG_COUNTER_INCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* DELETE img */\r\n    case userImgActions.DELETE_IMG_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case userImgActions.DELETE_IMG_SUCCESS:\r\n      const deleteImg = state.imgs.filter((img) => {\r\n        return img.id !== action.payload.imgId;\r\n      });\r\n      return {\r\n        ...state,\r\n        imgs: deleteImg,\r\n      };\r\n\r\n    case userImgActions.DELETE_IMG_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n    /* -------------------------------- */\r\n    /* first Login */\r\n    case firstLoginActions.FIRST_LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case firstLoginActions.FIRST_LOGIN_SUCCESS:\r\n      let user = action.payload.user;\r\n      user.firstLogin = true;\r\n      return {\r\n        ...state,\r\n        user: user,\r\n      };\r\n    case firstLoginActions.FIRST_LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* ------- todoLists ----------*/\r\n    /* add list */\r\n    case todoListsActions.ADD_TODOLIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.ADD_TODOLIST_SUCCESS:\r\n      // let listId = action.payload.user_id + action.payload.id;\r\n      let userTodos = [\r\n        {\r\n          list_name: action.payload.list_name,\r\n          user_id: action.payload.user_id,\r\n          todos: [\r\n            {\r\n              id: 1,\r\n              isChecked: true,\r\n              title: \"my first task\",\r\n              isDeleted: false,\r\n            },\r\n          ],\r\n          list_color: action.payload.list_color,\r\n          id: action.payload.id,\r\n          isDeleted: false,\r\n          todosCount: 1,\r\n          deleted_todos: [],\r\n          inEditTitle: false,\r\n        },\r\n        ...state.userTodos,\r\n      ];\r\n      return {\r\n        ...state,\r\n        userTodos,\r\n      };\r\n    case todoListsActions.ADD_TODOLIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* increment user todoLists count */\r\n    case todoListsActions.INC_LIST_COUNT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.INC_LIST_COUNT_SUCCESS:\r\n      let userInc = action.payload.user;\r\n      userInc.todoLists_count = action.payload.newCount;\r\n      return {\r\n        ...state,\r\n        user: userInc,\r\n      };\r\n    case todoListsActions.INC_LIST_COUNT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* list name in edit */\r\n    case todoListsActions.IN_EDIT_LIST:\r\n      const listNameInEdit = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      listNameInEdit.inEditTitle = true;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /* list name out edit */\r\n    case todoListsActions.OUT_EDIT_LIST:\r\n      const listNameOutEdit = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      listNameOutEdit.inEditTitle = false;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /* edit list name */\r\n    case todoListsActions.EDIT_LIST_NAME_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.EDIT_LIST_NAME_SUCCESS:\r\n      let editListName = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      editListName.list_name = action.payload.value;\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoListsActions.EDIT_LIST_NAME_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* CHANGE LIST COLOR */\r\n    case todoListsActions.CHANGE_LIST_COLOR_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.CHANGE_LIST_COLOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userTodos: state.userTodos.map((list) => {\r\n          if (list.id === action.payload.list.id) {\r\n            list.list_color = null;\r\n            list.list_color = action.payload.color;\r\n          }\r\n          return list;\r\n        }),\r\n      };\r\n    case todoListsActions.CHANGE_LIST_COLOR_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* remove todoLists  */\r\n    case todoListsActions.REMOVE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.REMOVE_LIST_SUCCESS:\r\n      let removeList = action.payload.list;\r\n      removeList.isDeleted = true;\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoListsActions.REMOVE_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* restore todoLists  */\r\n    case todoListsActions.RESTORE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.RESTORE_LIST_SUCCESS:\r\n      let restoreList = action.payload.list;\r\n      restoreList.isDeleted = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoListsActions.RESTORE_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* DELETE todoLists  */\r\n    case todoListsActions.DELETE_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.DELETE_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userTodos: state.userTodos.filter(\r\n          (list) => list.id !== action.payload.list.id\r\n        ),\r\n      };\r\n    case todoListsActions.DELETE_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* ------- todos----------*/\r\n    /* add Todo */\r\n    case todoActions.ADD_TODO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.ADD_TODO_SUCCESS:\r\n      let list = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      list.todos = [...list.todos, action.payload.todo];\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.ADD_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* edit Todo */\r\n    case todoActions.EDIT_TODO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.EDIT_TODO_SUCCESS:\r\n      let editTodo = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      editTodo.todos.map((todo) => {\r\n        if (todo.id === action.payload.todo.id)\r\n          todo.title = action.payload.newText;\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.EDIT_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* toggle Todo isChecked*/\r\n    case todoActions.TOGGLE_ISCHECKED_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.TOGGLE_ISCHECKED_SUCCESS:\r\n      let toggleIsChecked = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      toggleIsChecked.todos.map((todo) => {\r\n        if (todo.id === action.payload.todo.id)\r\n          !todo.isChecked ? (todo.isChecked = true) : (todo.isChecked = false);\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.TOGGLE_ISCHECKED_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* increment todos count */\r\n    case todoActions.INC_TODOS_COUNT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.INC_TODOS_COUNT_SUCCESS:\r\n      let incTodos = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      incTodos.todosCount += 1;\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.INC_TODOS_COUNT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* todo in edit */\r\n    case todoActions.IN_EDIT_TODO:\r\n      let todoInEdit = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      todoInEdit.todos.map((todo) => {\r\n        if (todo.id === action.payload.todo.id) todo.inEdit = true;\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /* todo out edit */\r\n    case todoActions.OUT_EDIT_TODO:\r\n      let todoOutEdit = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      todoOutEdit.todos.map((todo) => {\r\n        if (todo.id === action.payload.todo.id) todo.inEdit = false;\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    /* remove Todo */\r\n    case todoActions.REMOVE_TODO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.REMOVE_TODO_SUCCESS:\r\n      let removeListTodo = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      removeListTodo.todos.map((todo) => {\r\n        if (todo.id === action.payload.todo.id) todo.isDeleted = true;\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.REMOVE_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* restore Todo */\r\n    case todoActions.RESTORE_TODO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.RESTORE_TODO_SUCCESS:\r\n      let restoreListTodo = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      restoreListTodo.todos.map((todo) => {\r\n        if (todo.id === action.payload.todo.id) todo.isDeleted = false;\r\n        return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.RESTORE_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* DELETE Todo */\r\n    case todoActions.DELETE_TODO_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoActions.DELETE_TODO_SUCCESS:\r\n      let deleteListTodo = state.userTodos.find((list) => {\r\n        return list.id === action.payload.listId;\r\n      });\r\n      const deletedTodos = deleteListTodo.todos.filter((todo) => {\r\n        return todo.id !== action.payload.todo.id;\r\n      });\r\n      deleteListTodo.todos = [];\r\n      deleteListTodo.todos = deletedTodos;\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoActions.DELETE_TODO_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* todos history btn toggler */\r\n    case todoListsActions.HISTORY_BTN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case todoListsActions.HISTORY_BTN_SUCCESS:\r\n      const historyToggle = action.payload;\r\n      if (!historyToggle.todos_history) {\r\n        historyToggle.todos_history = true;\r\n      } else if (historyToggle.todos_history) {\r\n        historyToggle.todos_history = false;\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    case todoListsActions.HISTORY_BTN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* Search ***** */\r\n    case searchActions.SEARCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case searchActions.SEARCH_SUCCESS:\r\n      const search = action.payload.value;\r\n      return {\r\n        ...state,\r\n        search,\r\n      };\r\n    case searchActions.SEARCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* ---------------------- */\r\n    /* DELETE user */\r\n    case userActions.DELETE_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case userActions.DELETE_USER_SUCCESS:\r\n      const deltedUser = state.users.filter((user) => {\r\n        return user._id !== action.payload.userId;\r\n      });\r\n      return {\r\n        ...state,\r\n        users: deltedUser,\r\n      };\r\n\r\n    case userActions.DELETE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    /* ********************** */\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport postReducer from \"./posts/postReducer\";\r\n// import userReducer from \"./user/userReducer\";\r\nimport dataReducer from \"./initialData/initReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postReducer,\r\n  // user: userReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const ADD_TODO_REQUEST = \"ADD_TODO_REQUEST\";\r\nexport const ADD_TODO_SUCCESS = \"ADD_TODO_SUCCESS\";\r\nexport const ADD_TODO_FAILURE = \"ADD_TODO_FAILURE\";\r\n\r\nexport const OUT_EDIT_TODO = \"OUT_EDIT_TODO\";\r\nexport const IN_EDIT_TODO = \"IN_EDIT_TODO\";\r\n\r\nexport const EDIT_TODO_REQUEST = \"EDIT_TODO_REQUEST\";\r\nexport const EDIT_TODO_SUCCESS = \"EDIT_TODO_SUCCESS\";\r\nexport const EDIT_TODO_FAILURE = \"EDIT_TODO_FAILURE\";\r\n\r\nexport const TOGGLE_ISCHECKED_REQUEST = \"TOGGLE_ISCHECKED_REQUEST\";\r\nexport const TOGGLE_ISCHECKED_SUCCESS = \"TOGGLE_ISCHECKED_SUCCESS\";\r\nexport const TOGGLE_ISCHECKED_FAILURE = \"TOGGLE_ISCHECKED_FAILURE\";\r\n\r\nexport const INC_TODOS_COUNT_REQUEST = \"INC_TODOS_COUNT_REQUEST\";\r\nexport const INC_TODOS_COUNT_SUCCESS = \"INC_TODOS_COUNT_SUCCESS \";\r\nexport const INC_TODOS_COUNT_FAILURE = \"INC_TODOS_COUNT_FAILURE\";\r\n\r\nexport const REMOVE_TODO_REQUEST = \"REMOVE_TODO_REQUEST\";\r\nexport const REMOVE_TODO_SUCCESS = \"REMOVE_TODO_SUCCESS\";\r\nexport const REMOVE_TODO_FAILURE = \"REMOVE_TODO_FAILURE\";\r\n\r\nexport const RESTORE_TODO_REQUEST = \"RESTORE_TODO_REQUEST\";\r\nexport const RESTORE_TODO_SUCCESS = \"RESTORE_TODO_SUCCESS\";\r\nexport const RESTORE_TODO_FAILURE = \"RESTORE_TODO_FAILURE\";\r\n\r\nexport const DELETE_TODO_REQUEST = \"DELETE_TODO_REQUEST\";\r\nexport const DELETE_TODO_SUCCESS = \"DELETE_TODO_SUCCESS\";\r\nexport const DELETE_TODO_FAILURE = \"DELETE_TODO_FAILURE\";\r\n\r\nconst actions = {\r\n  ADD_TODO_REQUEST,\r\n  ADD_TODO_SUCCESS,\r\n  ADD_TODO_FAILURE,\r\n  IN_EDIT_TODO,\r\n  OUT_EDIT_TODO,\r\n  EDIT_TODO_REQUEST,\r\n  EDIT_TODO_SUCCESS,\r\n  EDIT_TODO_FAILURE,\r\n  TOGGLE_ISCHECKED_REQUEST,\r\n  TOGGLE_ISCHECKED_SUCCESS,\r\n  TOGGLE_ISCHECKED_FAILURE,\r\n  INC_TODOS_COUNT_REQUEST,\r\n  INC_TODOS_COUNT_SUCCESS,\r\n  INC_TODOS_COUNT_FAILURE,\r\n  REMOVE_TODO_REQUEST,\r\n  REMOVE_TODO_SUCCESS,\r\n  REMOVE_TODO_FAILURE,\r\n  RESTORE_TODO_REQUEST,\r\n  RESTORE_TODO_SUCCESS,\r\n  RESTORE_TODO_FAILURE,\r\n  DELETE_TODO_REQUEST,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getJwt } from \"./userService\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError = error.response && error.response.status >= 403;\r\n  if (expectedError) toast(\"An unexpected error has occured\");\r\n});\r\n\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport Joi from \"joi-browser\";\r\n\r\nconst token = \"token\";\r\n\r\n/* user create account */\r\nexport function createAccount(data) {\r\n  console.log(333);\r\n  http.post(`${apiUrl}/users`, data);\r\n}\r\n/* get user token */\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\n/* login and local-storage set token */\r\nexport async function login(email, password) {\r\n  try {\r\n    const { data } = await http.post(`${apiUrl}/login`, { email, password });\r\n    localStorage.setItem(token, data.token);\r\n    return data;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\nexport function logout() {\r\n  localStorage.removeItem(token);\r\n}\r\n\r\n/* get current user datails decoded */\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwtDecode(jwt);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n/* get me */\r\nexport function getUser() {\r\n  return http.get(`${apiUrl}/users/me`);\r\n}\r\n/* DELETE user */\r\nexport function DeletedUser() {\r\n  return http.delete(`${apiUrl}/users/me/delete`);\r\n}\r\n/* get alll users */\r\nexport function getAllUsers() {\r\n  return http.get(`${apiUrl}/users/get-all-users`);\r\n}\r\n/* edit user */\r\nexport async function editUserService(data) {\r\n  return await http.patch(`${apiUrl}/users/me`, data);\r\n}\r\n/* checks if first login and gives firest todo list */\r\nexport async function isFirstLogin() {\r\n  return await http.patch(`${apiUrl}/users/me/logs`);\r\n}\r\n/* counter for user's todoLists */\r\nexport async function incTodolistsCount(count) {\r\n  const newCount = count + 1;\r\n  return await http.patch(`${apiUrl}/users/me/todolists-count`, { newCount });\r\n}\r\n\r\n/* counter for user's posts */\r\nexport function incPostsCount() {\r\n  return http.patch(`${apiUrl}/users/me/posts-count`);\r\n}\r\n\r\n/* user validation schema */\r\nexport const schema = {\r\n  first_name: Joi.string().min(2).max(255).required().label(\"First Name\"),\r\n  last_name: Joi.string().min(2).max(255).required().label(\"Last Name\"),\r\n  email: Joi.string().min(6).max(255).required().email().label(\"Email\"),\r\n  // gender: Joi.string().min(4).max(6),\r\n  cell: Joi.string()\r\n    .min(9)\r\n    .max(10)\r\n    .regex(/^0[2-9]\\d{7,8}$/)\r\n    .label(\"Cell\"),\r\n  password: Joi.string().min(6).max(1024).required().label(\"Password\"),\r\n  password_confirm: Joi.string()\r\n    .required()\r\n    .min(6)\r\n    .max(1024)\r\n\r\n    .label(\"Password Confirm\")\r\n    .valid(Joi.ref(\"password\"))\r\n    .options({\r\n      language: {\r\n        any: {\r\n          allowOnly: \"!! \",\r\n        },\r\n      },\r\n    }),\r\n};\r\n\r\nconst userService = {\r\n  login,\r\n  getCurrentUser,\r\n  logout,\r\n  getJwt,\r\n};\r\n\r\nexport default userService;\r\n","export const USER_UPLOAD_IMG_REQUEST = \"USER_UPLOAD_IMG_REQUEST\";\r\nexport const USER_UPLOAD_IMG_SUCCESS = \"USER_UPLOAD_IMG_SUCCESS\";\r\nexport const USER_UPLOAD_IMG_FAILURE = \"USER_UPLOAD_IMG_FAILURE\";\r\n\r\nexport const ADD_IMG_REQUEST = \"ADD_IMG_REQUEST\";\r\nexport const ADD_IMG_SUCCESS = \"ADD_IMG_SUCCESS\";\r\nexport const ADD_IMG_FAILURE = \"ADD_IMG_FAILURE\";\r\n\r\nexport const IMG_COUNTER_INC_REQUEST = \"IMG_COUNTER_INC_REQUEST\";\r\nexport const IMG_COUNTER_INC_SUCCESS = \"IMG_COUNTER_INC_SUCCESS\";\r\nexport const IMG_COUNTER_INC_FAILURE = \"IMG_COUNTER_INC_FAILURE\";\r\n\r\nexport const PROFILE_IMG_REQUEST = \"PROFILE_IMG_REQUEST\";\r\nexport const PROFILE_IMG_SUCCESS = \"PROFILE_IMG_SUCCESS\";\r\nexport const PROFILE_IMG_FAILURE = \"PROFILE_IMG_FAILURE\";\r\n\r\nexport const DELETE_IMG_REQUEST = \"DELETE_IMG_REQUEST\";\r\nexport const DELETE_IMG_SUCCESS = \"DELETE_IMG_SUCCESS\";\r\nexport const DELETE_IMG_FAILURE = \"DELETE_IMG_FAILURE\";\r\n\r\nexport const IN_IMG_EDIT_MODE = \"IN_IMG_EDIT_MODE\";\r\nexport const OUT_IMG_EDIT_MODE = \"OUT_IMG_EDIT_MODE\";\r\n\r\nconst actions = {\r\n  USER_UPLOAD_IMG_REQUEST,\r\n  USER_UPLOAD_IMG_SUCCESS,\r\n  USER_UPLOAD_IMG_FAILURE,\r\n  ADD_IMG_REQUEST,\r\n  ADD_IMG_SUCCESS,\r\n  ADD_IMG_FAILURE,\r\n  IMG_COUNTER_INC_REQUEST,\r\n  IMG_COUNTER_INC_SUCCESS,\r\n  IMG_COUNTER_INC_FAILURE,\r\n  PROFILE_IMG_REQUEST,\r\n  PROFILE_IMG_SUCCESS,\r\n  PROFILE_IMG_FAILURE,\r\n  DELETE_IMG_REQUEST,\r\n  DELETE_IMG_SUCCESS,\r\n  DELETE_IMG_FAILURE,\r\n  IN_IMG_EDIT_MODE,\r\n  OUT_IMG_EDIT_MODE,\r\n};\r\n\r\nexport default actions;\r\n","export const COMMENTS_POST_ON = \"COMMENTS_POST_ON\";\r\nexport const COMMENTS_POST_OFF = \"COMMENTS_POST_OFF\";\r\n\r\nexport const COMMENTS_IN_EDIT = \"COMMENTS_IN_EDIT\";\r\nexport const COMMENTS_OUT_EDIT = \"COMMENTS_OUT_EDIT\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const EDIT_COMMENT_REQUEST = \"EDIT_COMMENT_REQUEST\";\r\nexport const EDIT_COMMENT_SUCCESS = \"EDIT_COMMENT_SUCCESS\";\r\nexport const EDIT_COMMENT_FAILURE = \"EDIT_COMMENT_FAILURE\";\r\n\r\nexport const DELETE_COMMENT_REQUEST = \"DELETE_COMMENT_REQUEST\";\r\nexport const DELETE_COMMENT_SUCCESS = \"DELETE_COMMENT_SUCCESS\";\r\nexport const DELETE_COMMENT_FAILURE = \"DELETE_COMMENT_FAILURE\";\r\n\r\nconst actions = {\r\n  COMMENTS_POST_ON,\r\n  COMMENTS_POST_OFF,\r\n  COMMENTS_IN_EDIT,\r\n  COMMENTS_OUT_EDIT,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  EDIT_COMMENT_REQUEST,\r\n  EDIT_COMMENT_SUCCESS,\r\n  EDIT_COMMENT_FAILURE,\r\n  DELETE_COMMENT_REQUEST,\r\n  DELETE_COMMENT_SUCCESS,\r\n  DELETE_COMMENT_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const EDIT_POST_REQUEST = \"EDIT_POST_REQUEST\";\r\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\r\nexport const EDIT_POST_FAILURE = \"EDIT_POST_FAILURE\";\r\n\r\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\";\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\r\nexport const DELETE_POST_FAILURE = \"DELETE_POST_FAILURE\";\r\n\r\nexport const EDIT_ON = \"EDIT_ON\";\r\nexport const EDIT_OFF = \"EDIT_OFF\";\r\n\r\nconst actions = {\r\n  EDIT_POST_REQUEST,\r\n  EDIT_POST_SUCCESS,\r\n  EDIT_POST_FAILURE,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_FAILURE,\r\n  EDIT_ON,\r\n  EDIT_OFF,\r\n};\r\n\r\nexport default actions;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\n/* create post */\r\nexport async function createPost(post) {\r\n  return http.post(`${apiUrl}/posts`, { post });\r\n}\r\n/* get all posts */\r\nexport function getAllPosts() {\r\n  return http.get(`${apiUrl}/posts/get-all-posts`);\r\n}\r\n\r\n/* edit post */\r\nexport function EditedPost(postId, value) {\r\n  return http.patch(`${apiUrl}/posts/edit-post/${postId}`, { value });\r\n}\r\n\r\n/* like a post */\r\nexport function likedPost(postId) {\r\n  return http.patch(`${apiUrl}/posts/liked/${postId}`);\r\n}\r\n/* unlike a post */\r\nexport function unLikedPost(postId) {\r\n  return http.patch(`${apiUrl}/posts/un-liked/${postId}`);\r\n}\r\n/* add comment to post */\r\nexport function addedComment(postId, comment) {\r\n  return http.patch(`${apiUrl}/posts/add-comment/${postId}`, { comment });\r\n}\r\n\r\n/* edit comment to post */\r\nexport function editedComment(postId, comment, newValue) {\r\n  return http.patch(`${apiUrl}/posts/edit-comment/${postId}`, {\r\n    comment,\r\n    newValue,\r\n  });\r\n}\r\n/* delete comment */\r\nexport function deletedComment(postId, comment) {\r\n  console.log(postId);\r\n  return http.patch(`${apiUrl}/posts/delete-comment/${postId}`, {\r\n    comment,\r\n  });\r\n}\r\n/* DELETE post */\r\nexport function DELETEpost(postId) {\r\n  console.log(postId);\r\n  return http.delete(`${apiUrl}/posts/${postId}`);\r\n}\r\n\r\nconst postServie = {\r\n  createPost,\r\n  getAllPosts,\r\n};\r\n\r\nexport default postServie;\r\n","export const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nconst actions = {\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const ADD_POST = \"ADD_POST\";\r\n\r\nexport const FETCH_POSTS_REQUEST = \"FETCH_POSTS_REQUEST\";\r\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\r\nexport const FETCH_POSTS_FAILURE = \"FETCH_POSTS_FAILURE\";\r\n","/* fetch data */\r\nexport const FETCH_DATA_REQUEST = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_FAILURE = \"FETCH_DATA_FAILURE\";\r\n\r\nconst actions = {\r\n  FETCH_DATA_REQUEST,\r\n  FETCH_DATA_SUCCESS,\r\n  FETCH_DATA_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const FIRST_LOGIN_REQUEST = \"FIRST_LOGIN_REQUEST\";\r\nexport const FIRST_LOGIN_SUCCESS = \"FIRST_LOGIN_SUCCESS\";\r\nexport const FIRST_LOGIN_FAILURE = \"FIRST_LOGIN_FAILURE\";\r\n\r\nconst actions = {\r\n  FIRST_LOGIN_REQUEST,\r\n  FIRST_LOGIN_SUCCESS,\r\n  FIRST_LOGIN_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const EDIT_USER_REQUEST = \"EDIT_USER_REQUEST\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const EDIT_USER_FAILURE = \"EDIT_USER_FAILURE\";\r\n\r\nconst actions = {\r\n  EDIT_USER_REQUEST,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_FAILURE = \"DELETE_USER_FAILURE\";\r\n\r\nconst actions = {\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const SEARCH_REQUEST = \"SEARCH_REQUEST\";\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\r\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\";\r\n\r\nconst actions = {\r\n  SEARCH_REQUEST,\r\n  SEARCH_SUCCESS,\r\n  SEARCH_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","import { createPost } from \"../../../services/postService\";\r\n\r\nexport const ADD_POSTS_REQUEST = \"ADD_POSTS_REQUEST\";\r\nexport const ADD_POSTS_SUCCESS = \"ADD_POSTS_SUCCESS\";\r\nexport const ADD_POSTS_FAILURE = \"ADD_POSTS_FAILURE\";\r\n\r\n/* add post */\r\n\r\nconst addPostRequest = () => {\r\n  return { type: ADD_POSTS_REQUEST };\r\n};\r\n\r\nconst addPostSuccess = (post, user) => {\r\n  return { type: ADD_POSTS_SUCCESS, payload: { post, user } };\r\n};\r\n\r\nconst addPostFailure = (error) => {\r\n  return { type: ADD_POSTS_FAILURE, payload: error };\r\n};\r\n\r\nexport function AddPost(post, user) {\r\n  return (dispatch) => {\r\n    dispatch(addPostRequest());\r\n    createPost(post, user).then(() => {\r\n      dispatch(addPostSuccess(post, user));\r\n    }).catch = (err) => {\r\n      console.error(\"post rejected\");\r\n      dispatch(addPostFailure(err));\r\n    };\r\n  };\r\n}\r\n\r\nconst actions = {\r\n  ADD_POSTS_REQUEST,\r\n  ADD_POSTS_SUCCESS,\r\n  ADD_POSTS_FAILURE,\r\n};\r\n\r\nexport default actions;\r\n","export const ADD_TODOLIST_REQUEST = \"ADD_TODOLIST_REQUEST\";\r\nexport const ADD_TODOLIST_SUCCESS = \"ADD_TODOLIST_SUCCESS\";\r\nexport const ADD_TODOLIST_FAILURE = \"ADD_TODOLIST_FAILURE\";\r\n\r\nexport const INC_LIST_COUNT_REQUEST = \"INC_LIST_COUNT_REQUEST\";\r\nexport const INC_LIST_COUNT_SUCCESS = \"INC_LIST_COUNT_SUCCESS \";\r\nexport const INC_LIST_COUNT_FAILURE = \"INC_LIST_COUNT_FAILURE\";\r\n\r\nexport const CHANGE_LIST_COLOR_REQUEST = \"CHANGE_LIST_COLOR_REQUEST\";\r\nexport const CHANGE_LIST_COLOR_SUCCESS = \"CHANGE_LIST_COLOR_SUCCESS \";\r\nexport const CHANGE_LIST_COLOR_FAILURE = \"CHANGE_LIST_COLOR_FAILURE\";\r\n\r\nexport const REMOVE_LIST_REQUEST = \"REMOVE_LIST_REQUEST\";\r\nexport const REMOVE_LIST_SUCCESS = \"REMOVE_LIST_SUCCESS \";\r\nexport const REMOVE_LIST_FAILURE = \"REMOVE_LIST_FAILURE\";\r\n\r\nexport const HISTORY_BTN_REQUEST = \"HISTORY_BTN_REQUEST\";\r\nexport const HISTORY_BTN_SUCCESS = \"HISTORY_BTN_SUCCESS \";\r\nexport const HISTORY_BTN_FAILURE = \"HISTORY_BTN_FAILURE\";\r\n\r\nexport const RESTORE_LIST_REQUEST = \"RESTORE_LIST_REQUEST\";\r\nexport const RESTORE_LIST_SUCCESS = \"RESTORE_LIST_SUCCESS \";\r\nexport const RESTORE_LIST_FAILURE = \"RESTORE_LIST_FAILURE\";\r\n\r\nexport const DELETE_LIST_REQUEST = \"DELETE_LIST_REQUEST\";\r\nexport const DELETE_LIST_SUCCESS = \"DELETE_LIST_SUCCESS \";\r\nexport const DELETE_LIST_FAILURE = \"DELETE_LIST_FAILURE\";\r\n\r\nexport const EDIT_LIST_NAME_REQUEST = \"EDIT_LIST_NAME_REQUEST\";\r\nexport const EDIT_LIST_NAME_SUCCESS = \"EDIT_LIST_NAME_SUCCESS \";\r\nexport const EDIT_LIST_NAME_FAILURE = \"EDIT_LIST_NAME_FAILURE\";\r\n\r\nexport const IN_EDIT_LIST = \"IN_EDIT_LIST\";\r\nexport const OUT_EDIT_LIST = \"OUT_EDIT_LIST\";\r\n\r\nconst actions = {\r\n  ADD_TODOLIST_REQUEST,\r\n  ADD_TODOLIST_SUCCESS,\r\n  ADD_TODOLIST_FAILURE,\r\n  INC_LIST_COUNT_REQUEST,\r\n  INC_LIST_COUNT_SUCCESS,\r\n  INC_LIST_COUNT_FAILURE,\r\n  CHANGE_LIST_COLOR_REQUEST,\r\n  CHANGE_LIST_COLOR_SUCCESS,\r\n  CHANGE_LIST_COLOR_FAILURE,\r\n  REMOVE_LIST_REQUEST,\r\n  REMOVE_LIST_SUCCESS,\r\n  REMOVE_LIST_FAILURE,\r\n  HISTORY_BTN_REQUEST,\r\n  HISTORY_BTN_SUCCESS,\r\n  HISTORY_BTN_FAILURE,\r\n  RESTORE_LIST_REQUEST,\r\n  RESTORE_LIST_SUCCESS,\r\n  RESTORE_LIST_FAILURE,\r\n  DELETE_LIST_REQUEST,\r\n  DELETE_LIST_SUCCESS,\r\n  DELETE_LIST_FAILURE,\r\n  EDIT_LIST_NAME_REQUEST,\r\n  EDIT_LIST_NAME_SUCCESS,\r\n  EDIT_LIST_NAME_FAILURE,\r\n  IN_EDIT_LIST,\r\n  OUT_EDIT_LIST,\r\n};\r\n\r\nexport default actions;\r\n"],"sourceRoot":""}